{"version":3,"file":"static/js/4992.e88e1b20.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/@ethersproject/constants/src.ts/addresses.ts","../node_modules/@ethersproject/constants/src.ts/hashes.ts","../node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../node_modules/@ethersproject/hash/src.ts/namehash.ts","../node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/@ethersproject/random/src.ts/shuffle.ts","../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/@ethersproject/sha2/src.ts/types.ts","../node_modules/node_modules/minimalistic-assert/index.js","../node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/node_modules/inherits/inherits_browser.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/@ethersproject/transactions/src.ts/_version.ts"],"sourcesContent":["\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","export const version = \"hash/5.7.0\";\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode(''));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.7.0\";\n","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","export const version = \"transactions/5.7.0\";\n"],"names":["logger","Logger","ForkEvent","value","_isForkEvent","Description","Provider","checkAbstract","defineReadOnly","this","resolveProperties","block","getBlock","gasPrice","getGasPrice","catch","error","lastBaseFeePerGas","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","BigNumber","mul","add","eventName","listener","on","off","_isProvider","allowedTransactionKeys","forwardErrors","Signer","blockTag","_checkProvider","provider","getBalance","getAddress","getTransactionCount","transaction","checkTransaction","tx","estimateGas","call","populateTransaction","signTransaction","signedTx","sendTransaction","getNetwork","network","chainId","getFeeData","name","resolveName","key","indexOf","throwArgumentError","shallowCopy","from","Promise","all","resolve","then","result","toLowerCase","to","__awaiter","address","hasEip1559","type","feeData","throwError","operation","nonce","gasLimit","code","getChainId","results","_isSigner","VoidSigner","message","_fail","domain","types","decode","textData","atob","data","i","length","push","charCodeAt","arrayify","encode","String","fromCharCode","btoa","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","j","base","string","k","_leader","q","TypeError","bytes","Uint8Array","byte","undefined","Error","reverse","Base58","AddressZero","HashZero","version","flat","array","depth","forEach","flatDeep","arr","val","Array","isArray","read_compressed_payload","v","pos","read_payload","u16","symbol_count","total","acc","skip","pos_payload","read_width","read_buffer","read_bit","FULL","Math","HALF","QRTR","MASK","register","symbols","low","range","floor","start","end","mid","a","b","offset","map","x","decode_arithmetic","signed","read_ascending","n","next","read_deltas","read_member_array","lookup","vX","vN","read_counts","read_transposed","w","m","fill","read_linear_table","dx","dy","read_zero_terminated_array","ys","slice","_","j_dy","y","read_replacement_table","r","VALID","Set","IGNORED","MAPPED","ret","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","sort","read","branches","keys","set","node","size","temp","valid","fe0f","save","check","read_emoji_trie","explode_cp","toUtf8CodePoints","filter_fe0f","cps","filter","cp","ens_normalize_post_check","split","label","lastIndexOf","every","err","ens_normalize","emoji_filter","input","output","emoji","consume_emoji_reversed","pop","has","toString","toUpperCase","s","fromCodePoint","normalize","eaten","saved","stack","find","splice","Zeros","checkComponent","comp","ensNameSplit","toUtf8Bytes","comps","last","isValidName","namehash","keccak256","concat","hexlify","dnsEncode","padding","NegativeOne","Zero","One","MaxUint256","hexTrue","hexZeroPad","toHexString","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","JSON","stringify","domainChecks","getBaseEncoder","match","width","parseInt","boundsUpper","mask","boundsLower","lt","gt","toTwos","padOffset","hexConcat","hexPadRight","id","encodeType","fields","join","TypedDataEncoder","Object","freeze","deepCopy","links","parents","subtypes","uniqueNames","field","baseType","primaryTypes","t","checkCircular","found","child","subtype","primaryType","st","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","values","unshift","encodeData","hashStruct","callback","_visit","reduce","accum","domainFields","EIP712Domain","hashDomain","hash","ensCache","isHexString","visit","domainValues","domainTypes","typesWithDomain","shuffled","random","tmp","ripemd160","update","digest","sha256","sha512","computeHmac","algorithm","SupportedAlgorithm","assert","msg","equal","l","utils","exports","zero2","word","toHex","res","toArray","enc","replace","c","hi","lo","minAssert","minUtils","getNAF","num","bits","naf","max","bitLength","ws","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","prototype","parseBytes","intFromLE","BN","BaseCurve","conf","p","red","prime","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","cmp","toJ","redNeg","index","ja","jb","eq","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","create","module","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","options","defineCurve","defineProperty","get","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","_init","seed","_update","_hmac","kmac","reseed","addEnc","generate","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","reason","getPrivate","umod","derive","sign","verify","signature","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","log","LN2","rlen","slen","toDER","backHalf","rand","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","_curve","getCurve","SigningKey","privateKey","hexDataLength","other","p0","publicKey","digestBytes","splitSignature","otherKey","otherKeyPair","computePublicKey","_isSigningKey","recoverPublicKey","sig","rs","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","transactionFields","maxLength","numeric","computeAddress","hexDataSlice","recoverAddress","formatNumber","stripZeros","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","accessList","RLP","_serializeEip2930","serialize","checkProperties","raw","fieldInfo","hexPad","isBytesLike","_serialize","transactionType","_parseEipSignature","recid","toNumber","rawTransaction","payload","isZero","_parse","_parseEip2930","_parseEip1559"],"sourceRoot":""}