{"version":3,"file":"static/js/2790.7665d905.chunk.js","mappings":"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A,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SAhFuC,SAmFxCF,GAAiBG,YAAc,CAAC,MAAO,MAAO,SAnFN,SAqFxCH,GAAiBI,QAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SArFnD,SAwFxCJ,GAAiBK,SAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SAxFpD,SA8FxCL,GAAiBM,QAAU,CAC1B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,SA1IuC,SA4IxCN,GAAiBO,MAAQ,CAAC,MAAO,MAAO,QAAf,GAGtBsB,GAA6B,IAAIC,IAhbE,CACvC,MACA,OACA,OACA,OACA,QACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,SACA,QACA,MACA,MACA,SACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,WACA,OACA,MACA,MACA,UACA,SACA,MACA,SACA,OACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,QACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,QACA,MACA,MACA,MACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,MACA,OACA,QACA,QACA,MACA,MACA,MACA,MACA,QACA,OACA,QA0JI,SAAUC,GAAwBC,GAEtC,OADwCJ,GAAmCI,GACpCC,QAAQC,SAAAA,GAAD,OAAcL,GAA2BM,IAAID,EAApF,GACR,CC5bD,IAAME,IAAgB,iBACnBpC,GAAiBC,QAAU,CAC1BoC,MAAO,gCACPC,MAAO,gBACPC,MAAO,mCACPC,YAAa,8BACbC,cAAe,MACfC,cAAe,IACfC,gBAAiBZ,GAAwB/B,GAAiBC,SAC1D2C,8BAA4B,eACzBpC,GAA0BC,QAAU,CACnC,CAAEoC,MAAO,OAAQC,QAAS,QAC1B,CAAED,MAAO,MAAOC,QAAS,OACzB,CAAED,MAAO,MAAOC,QAAS,OAC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","sources":["../node_modules/@metamask/obs-store/src/ComposedStore.ts","../node_modules/@metamask/obs-store/src/MergedStore.ts","../node_modules/@metamask/obs-store/src/ObservableStore.ts","../node_modules/@metamask/obs-store/src/asStream.ts","../node_modules/@metamask/obs-store/src/index.ts","../node_modules/@metamask/obs-store/src/transform.ts","../index.ts","../node_modules/@toruslabs/torus-embed/node_modules/@toruslabs/openlogin-jrpc/src/basePostMessageStream.ts","../node_modules/@toruslabs/torus-embed/node_modules/@toruslabs/openlogin-jrpc/src/safeEventEmitter.ts","../node_modules/@toruslabs/torus-embed/node_modules/@toruslabs/openlogin-jrpc/src/serializableError.ts","../node_modules/@toruslabs/torus-embed/node_modules/@toruslabs/openlogin-jrpc/src/jrpc.ts","../node_modules/@toruslabs/torus-embed/node_modules/@toruslabs/openlogin-jrpc/src/jrpcEngine.ts","../node_modules/@toruslabs/torus-embed/node_modules/@toruslabs/openlogin-jrpc/src/substream.ts","../node_modules/@toruslabs/torus-embed/node_modules/@toruslabs/openlogin-jrpc/src/mux.ts","../node_modules/@toruslabs/torus-embed/src/interfaces.ts","../node_modules/@toruslabs/torus-embed/src/supportedCurrencies.ts","../node_modules/@toruslabs/torus-embed/src/config.ts","../node_modules/@toruslabs/torus-embed/src/embedUtils.ts","../node_modules/@toruslabs/torus-embed/src/loglevel.ts","../node_modules/@toruslabs/torus-embed/src/messages.ts","../node_modules/@toruslabs/torus-embed/src/utils.ts","../node_modules/@toruslabs/torus-embed/src/inpage-provider.ts","../node_modules/@toruslabs/torus-embed/src/integrity.ts","../node_modules/@toruslabs/torus-embed/src/PopupHandler.ts","../node_modules/@toruslabs/torus-embed/src/siteMetadata.ts","../node_modules/@toruslabs/torus-embed/src/embed.ts","../node_modules/fast-deep-equal/index.js","../node_modules/is-stream/index.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/superPropBase.js"],"sourcesContent":["import { ObservableStore } from './ObservableStore';\n\nexport class ComposedStore<\n  T extends Record<string, Record<string, unknown>>,\n> extends ObservableStore<T> {\n  private _children: Record<keyof T, ObservableStore<T[keyof T]>>;\n\n  constructor(children: Record<keyof T, ObservableStore<T[keyof T]>>) {\n    // Typecast: Preserve existing behavior\n    super({} as unknown as T);\n\n    // subscribe to children\n    this._children = children || {};\n    Object.keys(this._children).forEach((childKey) => {\n      const child = this._children[childKey];\n      this._addChild(childKey, child);\n    });\n  }\n\n  _addChild(childKey: keyof T, child: ObservableStore<T[keyof T]>) {\n    const updateFromChild = (childValue: T[keyof T]) => {\n      const state = this.getState();\n      state[childKey] = childValue;\n      this.putState(state);\n    };\n\n    child.subscribe(updateFromChild);\n    updateFromChild(child.getState());\n  }\n}\n","import { ObservableStore } from './ObservableStore';\n\nexport class MergedStore<\n  T extends Record<string, unknown>,\n> extends ObservableStore<T> {\n  private _children: ObservableStore<Partial<T>>[];\n\n  constructor(children = []) {\n    // Typecast: Preserve existing behavior\n    super({} as unknown as T);\n\n    this._children = children;\n    // subscribe to children\n    children.forEach((child) => this._addChild(child));\n    this._updateWholeState();\n  }\n\n  _addChild(child: ObservableStore<Partial<T>>): void {\n    child.subscribe(() => this._updateWholeState());\n  }\n\n  _updateWholeState(): void {\n    const childStates = this._children.map((child) => child.getState());\n    // apply shallow merge over states\n    const state = Object.assign({}, ...childStates);\n    this.putState(state);\n  }\n}\n","import SafeEventEmitter from '@metamask/safe-event-emitter';\n\nexport class ObservableStore<T> extends SafeEventEmitter {\n  private _state: T;\n\n  constructor(initState: T) {\n    super();\n    if (initState) {\n      this._state = initState;\n    } else {\n      // Typecast/default state: Preserve existing behavior\n      this._state = {} as unknown as T;\n    }\n  }\n\n  // wrapper around internal getState\n  getState(): T {\n    return this._getState();\n  }\n\n  // wrapper around internal putState\n  putState(newState: T): void {\n    this._putState(newState);\n    this.emit('update', newState);\n  }\n\n  updateState(partialState: Partial<T>): void {\n    // if non-null object, merge\n    if (partialState && typeof partialState === 'object') {\n      const state = this.getState();\n      this.putState({ ...state, ...partialState });\n      // if not object, use new value\n    } else {\n      this.putState(partialState);\n    }\n  }\n\n  // subscribe to changes\n  subscribe(handler: (state: T) => void): void {\n    this.on('update', handler);\n  }\n\n  // unsubscribe to changes\n  unsubscribe(handler: (state: T) => void): void {\n    this.removeListener('update', handler);\n  }\n\n  //\n  // private\n  //\n\n  // read from persistence\n  protected _getState(): T {\n    return this._state;\n  }\n\n  // write to persistence\n  protected _putState(newState: T): void {\n    this._state = newState;\n  }\n}\n","import { Duplex as DuplexStream } from 'stream';\n\nimport { ObservableStore } from './ObservableStore';\n\nclass ObservableStoreStream<T> extends DuplexStream {\n  handler: (state: T) => void;\n\n  obsStore: ObservableStore<T>;\n\n  constructor(obsStore: ObservableStore<T>) {\n    super({\n      // pass values, not serializations\n      objectMode: true,\n    });\n    // dont buffer outgoing updates\n    this.resume();\n    // save handler so we can unsubscribe later\n    this.handler = (state: T) => this.push(state);\n    // subscribe to obsStore changes\n    this.obsStore = obsStore;\n    this.obsStore.subscribe(this.handler);\n  }\n\n  // emit current state on new destination\n  pipe<U extends NodeJS.WritableStream>(\n    dest: U,\n    options?: { end?: boolean },\n  ): U {\n    const result = super.pipe(dest, options);\n    dest.write(this.obsStore.getState() as any);\n    return result;\n  }\n\n  // write from incoming stream to state\n  _write(\n    chunk: any,\n    _encoding: string,\n    callback: (error?: Error | null) => void,\n  ): void {\n    this.obsStore.putState(chunk);\n    callback();\n  }\n\n  // noop - outgoing stream is asking us if we have data we arent giving it\n  _read(_size: number): void {\n    return undefined;\n  }\n\n  // unsubscribe from event emitter\n  _destroy(err: Error | null, callback: (error: Error | null) => void): void {\n    this.obsStore.unsubscribe(this.handler);\n    super._destroy(err, callback);\n  }\n}\n\nexport function storeAsStream<T>(\n  obsStore: ObservableStore<T>,\n): ObservableStoreStream<T> {\n  return new ObservableStoreStream(obsStore);\n}\n","export * from './asStream';\nexport * from './ComposedStore';\nexport * from './MergedStore';\nexport * from './ObservableStore';\nexport * from './transform';\n","import { obj as TransformStream } from 'through2';\n\nexport function storeTransformStream<T, U>(syncTransformFn: (state: T) => U) {\n  return TransformStream((state, _encoding, cb) => {\n    try {\n      const newState = syncTransformFn(state);\n      cb(null, newState);\n      return undefined;\n    } catch (err) {\n      cb(err);\n      return undefined;\n    }\n  });\n}\n",null,"import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(data: unknown, _, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","import { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { randomId } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport type Json = boolean | number | string | null | { [property: string]: Json } | Json[];\n\nexport type JRPCVersion = \"2.0\";\nexport type JRPCId = number | string | void;\n\nexport type ConsoleLike = Pick<Console, \"log\" | \"warn\" | \"error\" | \"debug\" | \"info\" | \"trace\">;\nexport interface JRPCBase {\n  jsonrpc?: JRPCVersion;\n  id?: JRPCId;\n}\n\nexport interface JRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: any;\n}\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport interface JRPCRequest<T> extends JRPCBase {\n  method: string;\n  params?: T;\n}\n\nexport type JRPCEngineNextCallback = (cb?: (done: (error?: Error) => void) => void) => void;\nexport type JRPCEngineEndCallback = (error?: Error) => void;\nexport type JRPCEngineReturnHandler = (done: (error?: Error) => void) => void;\n\ninterface IdMapValue {\n  req: JRPCRequest<unknown>;\n  res: JRPCResponse<unknown>;\n  next: JRPCEngineNextCallback;\n  end: JRPCEngineEndCallback;\n}\n\ninterface IdMap {\n  [requestId: string]: IdMapValue;\n}\n\nexport type JRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: JRPCResponse<U>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => void;\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error) {\n      log.error(`OpenLogin - RPC Error thrown: ${error.message}`, error);\n      res.error = new SerializableError({ code: -32603, message: error.message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\ntype ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport type AsyncJRPCEngineNextCallback = () => Promise<void>;\n\ntype Maybe<T> = Partial<T> | null | undefined;\n\nexport interface JRPCSuccess<T> extends JRPCBase {\n  result: Maybe<T>;\n}\n\nexport interface JRPCError {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n\nexport interface PendingJRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: Error | JRPCError;\n}\n\nexport interface JRPCFailure extends JRPCBase {\n  error: JRPCError;\n}\n\nexport type AsyncJRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: PendingJRPCResponse<U>, next: AsyncJRPCEngineNextCallback) => Promise<void>;\n\ntype ReturnHandlerCallback = (error: null | Error) => void;\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","import { serializeError } from \"eth-rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCEngineReturnHandler, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"./jrpc\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[]\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import { JRPCId, JRPCMiddleware, JRPCRequest, JRPCVersion, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport createHash from \"create-hash\";\nimport type { Duplex } from \"readable-stream\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n} as const;\n\nexport const WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\",\n} as const;\n\nexport const WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\",\n} as const;\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\",\n} as const;\n\nexport const SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type SUPPORTED_PAYMENT_NETWORK_TYPE = typeof SUPPORTED_PAYMENT_NETWORK[keyof typeof SUPPORTED_PAYMENT_NETWORK];\n\nexport type TORUS_BUILD_ENV_TYPE = typeof TORUS_BUILD_ENV[keyof typeof TORUS_BUILD_ENV];\n\nexport interface IPaymentProvider {\n  line1: string;\n  line2: string;\n  line3: string;\n  supportPage: string;\n  minOrderValue: number;\n  maxOrderValue: number;\n  validCurrencies: string[];\n  validCryptoCurrenciesByChain: Partial<Record<string, { value: string; display: string }[]>>;\n  includeFees: boolean;\n  enforceMax: boolean;\n  sell?: boolean;\n}\n\nexport interface IHashAlgorithmOptions {\n  algorithms?: createHash.algorithm[];\n  delimiter?: string;\n  full?: boolean;\n}\n\nexport interface SRI {\n  hashes: Record<createHash.algorithm, string>;\n  integrity?: string;\n}\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = typeof BUTTON_POSITION[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\nexport type ETHEREUM_NETWORK_TYPE = \"sepolia\" | \"mainnet\" | \"goerli\" | \"localhost\" | \"matic\" | \"mumbai\" | \"xdai\" | \"bsc_mainnet\" | \"bsc_testnet\";\n\nexport type LOGIN_TYPE =\n  | \"google\"\n  | \"facebook\"\n  | \"reddit\"\n  | \"discord\"\n  | \"twitch\"\n  | \"apple\"\n  | \"github\"\n  | \"linkedin\"\n  | \"twitter\"\n  | \"weibo\"\n  | \"line\"\n  | \"jwt\"\n  | \"email_password\"\n  | \"passwordless\";\n\nexport interface TorusCtorArgs {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n\n  /**\n   * Size of the widget button\n   * @defaultValue 56\n   */\n  buttonSize?: number;\n\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n}\n\nexport interface TorusLoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface NetworkInterface {\n  /**\n   * If any network other than the ones in enum, it should a JSON RPC URL\n   */\n  host: ETHEREUM_NETWORK_TYPE | string;\n  /**\n   * chainId for the network. If not provided, we query the host\n   */\n  chainId?: number;\n  /**\n   * Name of the network\n   */\n  networkName?: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer?: string;\n  /**\n   * Default currency ticker of the network (e.g: BNB)\n   */\n  ticker?: string;\n  /**\n   * Name for currency ticker (e.g: `Binance Coin`)\n   */\n  tickerName?: string;\n}\n\nexport interface BaseLoginOptions {\n  /**\n   * If you need to send custom parameters to the Authorization Server,\n   * make sure to use the original parameter name.\n   */\n  [key: string]: unknown;\n  /**\n   * - `'page'`: displays the UI with a full page view\n   * - `'popup'`: displays the UI with a popup window\n   * - `'touch'`: displays the UI in a way that leverages a touch interface\n   * - `'wap'`: displays the UI with a \"feature phone\" type interface\n   */\n  display?: \"page\" | \"popup\" | \"touch\" | \"wap\";\n  /**\n   * - `'none'`: do not prompt user for login or consent on reauthentication\n   * - `'login'`: prompt user for reauthentication\n   * - `'consent'`: prompt user for consent before processing request\n   * - `'select_account'`: prompt user to select an account\n   */\n  prompt?: \"none\" | \"login\" | \"consent\" | \"select_account\";\n  /**\n   * Maximum allowable elasped time (in seconds) since authentication.\n   * If the last time the user authenticated is greater than this value,\n   * the user must be reauthenticated.\n   */\n  max_age?: string | number;\n  /**\n   * The space-separated list of language tags, ordered by preference.\n   * For example: `'fr-CA fr en'`.\n   */\n  ui_locales?: string;\n  /**\n   * Previously issued ID Token.\n   */\n  id_token_hint?: string;\n  /**\n   * The user's email address or other identifier. When your app knows\n   * which user is trying to authenticate, you can provide this parameter\n   * to pre-fill the email box or select the right session for sign-in.\n   *\n   * This currently only affects the classic Lock experience.\n   */\n  login_hint?: string;\n  acr_values?: string;\n  /**\n   * The default scope to be used on authentication requests.\n   * The defaultScope defined in the Auth0Client is included\n   * along with this scope\n   */\n  scope?: string;\n  /**\n   * The default audience to be used for requesting API access.\n   */\n  audience?: string;\n  /**\n   * The name of the connection configured for your application.\n   * If null, it will redirect to the Auth0 Login Page and show\n   * the Login Widget.\n   */\n  connection?: string;\n}\n\nexport interface JwtParameters extends BaseLoginOptions {\n  /**\n   * Your Auth0 account domain such as `'example.auth0.com'`,\n   * `'example.eu.auth0.com'` or , `'example.mycompany.com'`\n   * (when using [custom domains](https://auth0.com/docs/custom-domains))\n   */\n  domain: string;\n  /**\n   * The Client ID found on your Application settings page\n   */\n  client_id?: string;\n  /**\n   * The default URL where Auth0 will redirect your browser to with\n   * the authentication result. It must be whitelisted in\n   * the \"Allowed Callback URLs\" field in your Auth0 Application's\n   * settings. If not provided here, it should be provided in the other\n   * methods that provide authentication.\n   */\n  redirect_uri?: string;\n  /**\n   * The value in seconds used to account for clock skew in JWT expirations.\n   * Typically, this value is no more than a minute or two at maximum.\n   * Defaults to 60s.\n   */\n  leeway?: number;\n\n  /**\n   * The field in jwt token which maps to verifier id\n   */\n  verifierIdField?: string;\n\n  /**\n   * Whether the verifier id field is case sensitive\n   * @defaultValue true\n   */\n  isVerifierIdCaseSensitive?: boolean;\n}\n\nexport interface LoginConfigItem {\n  /**\n   * Display Name. If not provided, we use the default for torus app\n   */\n  name: string;\n  /**\n   * The type of login. Refer to enum `LOGIN_TYPE`\n   */\n  typeOfLogin: LOGIN_TYPE;\n  /**\n   * Description for button. If provided, it renders as a full length button. else, icon button\n   */\n  description?: string;\n  /**\n   * Custom client_id. If not provided, we use the default for torus app\n   */\n  clientId?: string;\n  /**\n   * Logo to be shown on mouse hover. If not provided, we use the default for torus app\n   */\n  logoHover?: string;\n  /**\n   * Logo to be shown on dark background (dark theme). If not provided, we use the default for torus app\n   */\n  logoLight?: string;\n  /**\n   * Logo to be shown on light background (light theme). If not provided, we use the default for torus app\n   */\n  logoDark?: string;\n  /**\n   * Whether to show the login button on modal or not\n   */\n  showOnModal?: boolean;\n  /**\n   * Whether to show the login button on mobile\n   */\n  showOnMobile?: boolean;\n  /**\n   * Custom jwt parameters to configure the login. Useful for Auth0 configuration\n   */\n  jwtParameters?: JwtParameters;\n  /**\n   * Show login button on the main list\n   */\n  mainOption?: boolean;\n  /**\n   * Whether to show the login button on desktop\n   */\n  showOnDesktop?: boolean;\n  /**\n   * Modify the order of buttons. Should be greater than zero, where 1 is top priority.\n   */\n  priority?: number;\n}\n\nexport interface LoginConfig {\n  /**\n   * Use the verifier provided by torus as a key or a default verifier used by torus\n   * {@link https://docs.tor.us/torus-wallet/developing-with-torus-wallet/oauth | Documentation}\n   */\n  [verifier: string]: LoginConfigItem;\n}\n\nexport interface TorusNodePub {\n  /**\n   * X component of a Public Key\n   */\n  X: string;\n  /**\n   * Y component of a Public Key\n   */\n  Y: string;\n}\n\nexport interface TorusPublicKey extends TorusNodePub {\n  /**\n   * Ethereum Public Address\n   */\n  address: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Chain Network to use\n   */\n  chainNetwork?: SUPPORTED_PAYMENT_NETWORK_TYPE;\n}\n\nexport interface VerifierArgs {\n  /**\n   * Verifier Enum\n   */\n  verifier: \"google\" | \"reddit\" | \"discord\";\n  /**\n   * email for google\n   *\n   * username for reddit\n   *\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * If true, returns {@link TorusPublicKey}, else returns string\n   */\n  isExtended?: boolean;\n}\n\nexport interface LoginParams {\n  verifier?: string;\n  login_hint?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n  /**\n   * Returns if the logged in user is new\n   */\n  isNewUser: boolean;\n\n  /**\n   * login type of the logged in user (google, facebook etc)\n   */\n  typeOfLogin: LOGIN_TYPE;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface ThemeParams {\n  /**\n   * If true, enables dark mode\n   * Defaults to false\n   * @defaultValue false\n   */\n  isDark: boolean;\n  /**\n   * Colors object to customize colors in torus theme.\n   *\n   * Contact us for whitelabel. Example provided in `examples/vue-app`\n   */\n  colors: Record<string, string>;\n}\n\nexport interface IntegrityParams {\n  /**\n   * Whether to check for integrity.\n   * Defaults to false\n   * @defaultValue false\n   */\n  check: boolean;\n  /**\n   * if check is true, hash must be provided. The SRI sha-384 integrity hash\n   * {@link https://www.srihash.org/ | SRI Hash}\n   */\n  hash?: string;\n  /**\n   * Version of torus-website to load\n   */\n  version?: string;\n}\n\nexport interface VerifierStatus {\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  google?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  facebook?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  reddit?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  twitch?: boolean;\n  /**\n   * Defaults to true\n   * @defaultValue true\n   */\n  discord?: boolean;\n}\n\nexport interface WhiteLabelParams {\n  /**\n   * Whitelabel theme\n   */\n  theme: ThemeParams;\n  /**\n   * Language of whitelabel.\n   *\n   * order of preference: Whitelabel language \\> user language (in torus-website) \\> browser language\n   */\n  defaultLanguage?: string;\n  /**\n   * Logo Url to be used in light mode (dark logo)\n   */\n  logoDark: string;\n  /**\n   * Logo Url to be used in dark mode (light logo)\n   */\n  logoLight: string;\n  /**\n   * Shows/hides topup option in torus-website/widget.\n   * Defaults to false\n   * @defaultValue false\n   */\n  topupHide?: boolean;\n  /**\n   * Shows/hides billboard in torus-website.\n   * Defaults to false\n   * @defaultValue false\n   */\n  featuredBillboardHide?: boolean;\n  /**\n   * Shows/hides disclaimers on login page. Only works if special logins are hidden\n   * Defaults to false\n   * @defaultValue false\n   */\n  disclaimerHide?: boolean;\n  /**\n   * Language specific link for terms and conditions on torus-website. See (examples/vue-app) to configure\n   */\n  tncLink?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  privacyPolicy?: LocaleLinks<string>;\n  /**\n   * Language specific link for privacy policy on torus-website. See (examples/vue-app) to configure\n   */\n  contactLink?: LocaleLinks<string>;\n  /**\n   * Custom translations. See (examples/vue-app) to configure\n   */\n  customTranslations?: LocaleLinks<unknown>;\n}\n\nexport interface TorusParams {\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://app.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * binance uses https://binance.tor.us,\n   *\n   * bnb uses https://bnb.tor.us,\n   *\n   * polygon uses https://polygon.tor.us,\n   *\n   * lrc uses https://lrc.tor.us,\n   *\n   * beta uses https://beta.tor.us, (currently supports tkey)\n   *\n   * testing uses https://testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * setting false, hides those verifiers from login modal\n   * @deprecated\n   * Please use loginConfig instead\n   */\n  enabledVerifiers?: VerifierStatus;\n  /**\n   * Array of login config items. Used to modify the default logins/ add new logins\n   */\n  loginConfig?: LoginConfig;\n  /**\n   * Params to enable integrity checks and load specific versions of torus-website\n   */\n  integrity?: IntegrityParams;\n  /**\n   * Params to enable whitelabelling of torus website and widget\n   */\n  whiteLabel?: WhiteLabelParams;\n  /**\n   * Skips TKey onboarding for new users\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  skipTKey?: boolean;\n\n  /**\n   * Setting `useWalletConnect` to true allows to display wallet connect qr scanner from torus-embed.\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useWalletConnect?: boolean;\n\n  /**\n   * Setting mfa level to `default` will present mfa screen to user on every third login\n   * Setting mfa level to `optional` will present mfa screen to user on every login but user can skip it\n   * Setting mfa level to `mandatory` will make it mandatory for user to setup mfa after login\n   * Setting mfa level to`none` will make the user skip the mfa setup screen\n   *\n   * Defaults to default\n   * @defaultValue default\n   */\n  mfaLevel?: \"none\" | \"default\" | \"optional\" | \"mandatory\";\n}\n\nexport interface UnvalidatedJsonRpcRequest {\n  id?: JRPCId;\n  jsonrpc?: JRPCVersion;\n  method: string;\n  params?: unknown;\n  preopenInstanceId?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n  /**\n   * Whether the provider should send page metadata.\n   */\n  shouldSendMetadata?: boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown[] | Record<string, unknown>;\n}\n\nexport interface BaseProviderState {\n  accounts: null | string[];\n  isConnected: boolean;\n  isUnlocked: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface JsonRpcConnection {\n  events: SafeEventEmitter;\n  middleware: JRPCMiddleware<unknown, unknown>;\n  stream: Duplex;\n}\n\nexport interface SentWarningsState {\n  // methods\n  enable: boolean;\n  experimentalMethods: boolean;\n  send: boolean;\n  publicConfigStore: boolean;\n  // events\n  events: {\n    close: boolean;\n    data: boolean;\n    networkChanged: boolean;\n    notification: boolean;\n  };\n}\n\nexport interface SendSyncJsonRpcRequest extends JRPCRequest<unknown> {\n  method: \"eth_accounts\" | \"eth_coinbase\" | \"eth_uninstallFilter\" | \"net_version\";\n}\n\nexport interface PublicConfigState {\n  isUnlocked?: boolean;\n  selectedAddress?: string;\n  chainId?: string;\n  networkVersion?: string;\n  storageKey: string;\n}\n\nexport type Maybe<T> = Partial<T> | null | undefined;\n\nexport type BufferEncoding = \"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"base64url\" | \"latin1\" | \"binary\" | \"hex\";\n\nexport type IObjectMultiplex = Duplex;\n\nexport type WalletProviderState = {\n  accounts: string[];\n  chainId: string;\n  isUnlocked: boolean;\n  networkVersion: string;\n};\n","import { PAYMENT_PROVIDER } from \"./interfaces\";\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nexport const CRYPTO_COMPARE_CURRENCIES = [\n  \"ETH\",\n  \"USDT\",\n  \"USDC\",\n  \"TUSD\",\n  \"EOSDT\",\n  \"USD\",\n  \"DAI\",\n  \"GUSD\",\n  \"DKKT\",\n  \"PAX\",\n  \"ILS\",\n  \"RUB\",\n  \"BYN\",\n  \"EUR\",\n  \"GBP\",\n  \"JPY\",\n  \"KRW\",\n  \"PLN\",\n  \"MXN\",\n  \"AUD\",\n  \"BRL\",\n  \"CAD\",\n  \"CHF\",\n  \"KPW\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"XOF\",\n  \"CNHT\",\n  \"DOGE\",\n  \"UAH\",\n  \"TRY\",\n  \"HKD\",\n  \"XJP\",\n  \"SGD\",\n  \"USC\",\n  \"NZD\",\n  \"NGN\",\n  \"RUR\",\n  \"COP\",\n  \"GHS\",\n  \"EGP\",\n  \"IDR\",\n  \"BHD\",\n  \"CRC\",\n  \"PEN\",\n  \"AED\",\n  \"DOP\",\n  \"PKR\",\n  \"HUF\",\n  \"VND\",\n  \"XAR\",\n  \"LTC\",\n  \"RON\",\n  \"OMR\",\n  \"MYR\",\n  \"DKK\",\n  \"UGX\",\n  \"ZMW\",\n  \"SAR\",\n  \"SEK\",\n  \"GEL\",\n  \"RWF\",\n  \"IRR\",\n  \"TZS\",\n  \"CNY\",\n  \"VEF\",\n  \"BDT\",\n  \"HRK\",\n  \"CLP\",\n  \"THB\",\n  \"XAF\",\n  \"ARS\",\n  \"UYU\",\n  \"SZL\",\n  \"KZT\",\n  \"NOK\",\n  \"KES\",\n  \"PAB\",\n  \"INR\",\n  \"CZK\",\n  \"MAD\",\n  \"TWD\",\n  \"PHP\",\n  \"ZAR\",\n  \"BOB\",\n  \"CDF\",\n  \"DASH\",\n  \"VES\",\n  \"ISK\",\n  \"MWK\",\n  \"BAM\",\n  \"TTD\",\n  \"XRP\",\n  \"JOD\",\n  \"RSD\",\n  \"HNL\",\n  \"BGN\",\n  \"GTQ\",\n  \"BWP\",\n  \"XMR\",\n  \"MMK\",\n  \"QAR\",\n  \"AOA\",\n  \"KWD\",\n  \"MUR\",\n  \"WUSD\",\n  \"WEUR\",\n  \"WAVES\",\n  \"WTRY\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"AWG\",\n  \"MDL\",\n  \"BTO\",\n  \"EURS\",\n  \"CHFT\",\n  \"MKD\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MVR\",\n  \"VOLLAR\",\n  \"CKUSD\",\n  \"KHR\",\n  \"VUV\",\n  \"BITCNY\",\n  \"QC\",\n  \"BBD\",\n  \"NAD\",\n  \"NPR\",\n  \"PGK\",\n  \"PYG\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"XLM\",\n  \"BNB\",\n  \"SCR\",\n  \"BAT\",\n  \"CRO\",\n  \"HT\",\n  \"KCS\",\n  \"LEO\",\n  \"LINK\",\n  \"MKR\",\n  \"NPXS\",\n  \"OMG\",\n  \"REP\",\n  \"ZB\",\n  \"ZIL\",\n  \"ZRX\",\n  \"BCH\",\n  \"BZD\",\n  \"CUP\",\n  \"CVE\",\n  \"DJF\",\n  \"DZD\",\n  \"ERN\",\n  \"ETB\",\n  \"FJD\",\n  \"FKP\",\n  \"BUSD\",\n  \"ANCT\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"CNYX\",\n  \"IQD\",\n  \"UZS\",\n  \"TND\",\n  \"GGP\",\n  \"XAU\",\n  \"KGS\",\n  \"GIP\",\n  \"JMD\",\n  \"ZEC\",\n  \"USDP\",\n  \"BSV\",\n  \"EMC2\",\n  \"SNT\",\n  \"GTO\",\n  \"POWR\",\n  \"EUSD\",\n  \"EURT\",\n  \"BCY\",\n  \"BTS\",\n  \"ATM\",\n  \"BLOCKPAY\",\n  \"ARDR\",\n  \"AMP\",\n  \"B2X\",\n  \"BITGOLD\",\n  \"BITEUR\",\n  \"ATB\",\n  \"BITUSD\",\n  \"AGRS\",\n  \"DFXT\",\n  \"HIKEN\",\n  \"BIX\",\n  \"KNC\",\n  \"EOS\",\n  \"COB\",\n  \"COSS\",\n  \"BMH\",\n  \"NANO\",\n  \"BDG\",\n  \"BNT\",\n  \"XVG\",\n  \"LKK1Y\",\n  \"LKK\",\n  \"USDK\",\n  \"EURN\",\n  \"NZDT\",\n  \"JSE\",\n  \"GMD\",\n  \"GNF\",\n  \"GYD\",\n  \"YER\",\n  \"XPF\",\n  \"HTG\",\n  \"SLL\",\n  \"SOS\",\n  \"WST\",\n  \"SVC\",\n  \"SYP\",\n  \"NEO\",\n  \"KMF\",\n  \"JUMP\",\n  \"AYA\",\n  \"BLAST\",\n  \"WGR\",\n  \"BCN\",\n  \"BTG\",\n  \"URALS\",\n  \"INN\",\n  \"USDQ\",\n  \"CNH\",\n  \"HUSD\",\n  \"BKRW\",\n  \"NZDX\",\n  \"EURX\",\n  \"CADX\",\n  \"USDEX\",\n  \"JPYX\",\n  \"AUDX\",\n  \"VNDC\",\n  \"EON\",\n  \"GBPX\",\n  \"CHFX\",\n  \"USDJ\",\n  \"IDRT\",\n  \"USDS\",\n  \"USDN\",\n  \"BIDR\",\n  \"IDK\",\n  \"BSD\",\n  \"BTN\",\n  \"KYD\",\n  \"NIO\",\n  \"SBD\",\n  \"SDG\",\n  \"SHP\",\n  \"TOP\",\n  \"XCD\",\n  \"XCHF\",\n  \"CNYT\",\n  \"GYEN\",\n  \"ZUSD\",\n  \"GOLD\",\n  \"TRX\",\n  \"TRYB\",\n  \"PLATC\",\n  \"STRAX\",\n  \"UST\",\n  \"GLM\",\n  \"VAI\",\n  \"BRZ\",\n  \"DDRST\",\n  \"XAUT\",\n  \"MIM\",\n];\n\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\n    \"AUD\",\n    \"BGN\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CNY\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EGP\",\n    \"EUR\",\n    \"GBP\",\n    \"HKD\",\n    \"HRK\",\n    \"IDR\",\n    \"ILS\",\n    \"JPY\",\n    \"JOD\",\n    \"KES\",\n    \"KRW\",\n    \"KWD\",\n    \"LKR\",\n    \"MAD\",\n    \"MXN\",\n    \"MYR\",\n    \"NGN\",\n    \"NOK\",\n    \"NZD\",\n    \"OMR\",\n    \"PEN\",\n    \"PKR\",\n    \"PLN\",\n    \"RON\",\n    \"RUB\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TWD\",\n    \"USD\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\n    \"USD\",\n    \"EUR\",\n    \"GBP\",\n    \"AUD\",\n    \"CAD\",\n    \"NZD\",\n    \"ARS\",\n    \"BRL\",\n    \"CHF\",\n    \"CLP\",\n    \"COP\",\n    \"CZK\",\n    \"DKK\",\n    \"HKD\",\n    \"ILS\",\n    \"INR\",\n    \"ISK\",\n    \"JPY\",\n    \"KRW\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"PHP\",\n    \"PLN\",\n    \"SEK\",\n    \"THB\",\n    \"VND\",\n    \"ZAR\",\n  ],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\n    \"ARS\",\n    \"AUD\",\n    \"BBD\",\n    \"BGN\",\n    \"BMD\",\n    \"BRL\",\n    \"CAD\",\n    \"CHF\",\n    \"CLP\",\n    \"CRC\",\n    \"CZK\",\n    \"DKK\",\n    \"DOP\",\n    \"EUR\",\n    \"FJD\",\n    \"FKP\",\n    \"GBP\",\n    \"GIP\",\n    \"HRK\",\n    \"HUF\",\n    \"IDR\",\n    \"ILS\",\n    \"ISK\",\n    \"JMD\",\n    \"JPY\",\n    \"KES\",\n    \"KRW\",\n    \"MDL\",\n    \"MXN\",\n    \"MYR\",\n    \"NOK\",\n    \"NZD\",\n    \"PEN\",\n    \"PHP\",\n    \"PLN\",\n    \"PYG\",\n    \"RON\",\n    \"SEK\",\n    \"SGD\",\n    \"THB\",\n    \"TRY\",\n    \"TZS\",\n    \"USD\",\n    \"ZAR\",\n  ],\n  [PAYMENT_PROVIDER.BANXA]: [\"EUR\", \"GBP\", \"USD\"],\n};\n\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nexport function supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter((currency) => cryptoCompareCurrenciesSet.has(currency));\n}\n","import { EMBED_TRANSLATION_ITEM, IPaymentProvider, LocaleLinks, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, WALLET_VERIFIERS } from \"./interfaces\";\nimport { supportedFiatCurrencies } from \"./supportedCurrencies\";\n\nconst paymentProviders = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"aave\", display: \"AAVE\" },\n        { value: \"bat\", display: \"BAT\" },\n        { value: \"dai\", display: \"DAI\" },\n        { value: \"eth\", display: \"ETH\" },\n        { value: \"mkr\", display: \"MKR\" },\n        { value: \"matic\", display: \"MATIC\" },\n        { value: \"usdt\", display: \"USDT\" },\n        { value: \"usdc\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"eth_polygon\", display: \"ETH\" },\n        { value: \"matic_polygon\", display: \"MATIC\" },\n        { value: \"usdc_polygon\", display: \"USDC\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"bnb_bsc\", display: \"BNB\" },\n        { value: \"busd_bsc\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"avax_cchain\", display: \"AVAX\" }],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"MKR\", display: \"MKR\" },\n        { value: \"UNI\", display: \"UNI\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MUSDC\", display: \"USDC\" }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAXC\", display: \"AVAXC\" }],\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"MATIC_DAI\", display: \"DAI\" },\n        { value: \"MATIC_MATIC\", display: \"MATIC\" },\n        { value: \"MATIC_USDC\", display: \"USDC\" },\n      ],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n      // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n    },\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"DAI\", display: \"DAI\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"1INCH\", display: \"1INCH\" },\n      ],\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"DAI\", display: \"DAI\" },\n        { value: \"MATIC\", display: \"MATIC\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"WETH\", display: \"WETH\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [\n        { value: \"BNB\", display: \"BNB\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{ value: \"AVAX\", display: \"AVAX\" }],\n    },\n    includeFees: true,\n    enforceMax: true,\n  } as IPaymentProvider,\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15_000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [\n        { value: \"ETH\", display: \"ETH\" },\n        { value: \"USDT\", display: \"USDT\" },\n        { value: \"BUSD\", display: \"BUSD\" },\n        { value: \"LINK\", display: \"LINK\" },\n        { value: \"USDC\", display: \"USDC\" },\n        { value: \"CHZ\", display: \"CHZ\" },\n        { value: \"BAT\", display: \"BAT\" },\n        { value: \"MANA\", display: \"MANA\" },\n        { value: \"AAVE\", display: \"AAVE\" },\n        { value: \"COMP\", display: \"COMP\" },\n        { value: \"ENJ\", display: \"ENJ\" },\n      ],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{ value: \"MATIC\", display: \"MATIC\" }],\n      // [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{ value: \"BNB\", display: \"BNB\" }],\n    },\n    includeFees: true,\n    enforceMax: true,\n  },\n};\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`,\n};\n","import { Stream } from \"pump\";\n\nexport const runOnLoad = (fn: () => void): Promise<unknown> =>\n  new Promise((resolve, reject) => {\n    if (window.document.body != null) {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    } else {\n      window.document.addEventListener(\"DOMContentLoaded\", () => {\n        Promise.resolve(fn()).then(resolve).catch(reject);\n      });\n    }\n  });\n\nexport const runOnComplete = (fn: () => void): void => {\n  const retry = window.setInterval(() => {\n    if (window.document.readyState === \"complete\") {\n      window.clearInterval(retry);\n      fn();\n    }\n  }, 300);\n};\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n\nexport const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport const handleStream = (handle: Stream, eventName: string, handler: (chunk: unknown) => void): void => {\n  const handlerWrapper = (chunk: unknown) => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"torus-embed\");\n","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: (): string => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number, shouldSendMetadata: boolean): string =>\n      `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation:\n      'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' +\n      'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation:\n      'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' +\n      ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close:\n        'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' +\n        \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data:\n        'Torus: The event \"data\" is deprecated and will be removed in the future.' +\n        'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged:\n        'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' +\n        ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification:\n        'Torus: The event \"notification\" is deprecated and may be removed in the future. ' +\n        'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.',\n  },\n};\n","import { get } from \"@toruslabs/http-helpers\";\nimport { JRPCMiddleware, PendingJRPCResponse, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { IntegrityParams, PAYMENT_PROVIDER, PAYMENT_PROVIDER_TYPE, PaymentParams, TORUS_BUILD_ENV_TYPE } from \"./interfaces\";\nimport log from \"./loglevel\";\n\nconst { paymentProviders } = config;\n\ntype PaymentErrorParams = {\n  fiatValue?: string;\n  selectedCurrency?: string;\n  selectedCryptoCurrency?: string;\n};\n\ntype PaymentErrors = { provider?: string } & PaymentErrorParams;\n\nexport const validatePaymentProvider = (provider: string, params: PaymentParams): { errors: PaymentErrors; isValid: boolean } => {\n  const errors: PaymentErrors = {};\n\n  if (!provider) {\n    return { errors, isValid: true };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n\n  const selectedProvider = paymentProviders[provider as PAYMENT_PROVIDER_TYPE];\n  const selectedParams = params || {};\n\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax)\n      errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain)\n      .flat()\n      .map((currency) => currency.value);\n\n    const finalCryptoCurrency =\n      provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency))\n      errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return { errors, isValid: Object.keys(errors).length === 0 };\n};\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n// resolve response.result or response, reject errors\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: PendingJRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      reject(error || response.error);\n    } else {\n      resolve(!unwrapResult || Array.isArray(response) ? response : response.result);\n    }\n  };\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (\n  buildEnv: TORUS_BUILD_ENV_TYPE,\n  integrity: IntegrityParams\n): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // Do not change this line\n  const version = process.env.TORUS_EMBED_VERSION;\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response: { data: string };\n      if (!config.prodTorusUrl)\n        response = await get(`${config.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, { useAPIKey: true });\n      else response = { data: config.prodTorusUrl };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      config.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const EMITTED_NOTIFICATIONS = [\n  \"eth_subscription\", // per eth-json-rpc-filters/subscriptionManager\n];\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nexport const FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nexport const FEATURES_DEFAULT_POPUP_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=1200\";\nexport const FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","import { ObservableStore, storeAsStream } from \"@metamask/obs-store\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  JRPCSuccess,\n  ObjectMultiplex,\n  SafeEventEmitter,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError, ethErrors } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport {\n  BaseProviderState,\n  JsonRpcConnection,\n  Maybe,\n  ProviderOptions,\n  PublicConfigState,\n  RequestArguments,\n  SendSyncJsonRpcRequest,\n  SentWarningsState,\n  UnvalidatedJsonRpcRequest,\n  WalletProviderState,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, EMITTED_NOTIFICATIONS, logStreamDisconnectWarning, NOOP } from \"./utils\";\n\nSafeEventEmitter.defaultMaxListeners = 100;\n\n// resolve response.result, reject errors\nconst getRpcPromiseCallback =\n  (resolve, reject, unwrapResult = true) =>\n  (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  protected static _defaultState: BaseProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  _rpcEngine: JRPCEngine;\n\n  public networkVersion: string | null;\n\n  shouldSendMetadata: boolean;\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  public readonly isTorus: true;\n\n  _publicConfigStore: ObservableStore<PublicConfigState>;\n\n  tryPreopenHandle: (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  enable: () => Promise<string[]>;\n\n  protected _state: BaseProviderState;\n\n  protected _jsonRpcConnection: JsonRpcConnection;\n\n  protected _sentWarnings: SentWarningsState = {\n    // methods\n    enable: false,\n    experimentalMethods: false,\n    send: false,\n    publicConfigStore: false,\n    // events\n    events: {\n      close: false,\n      data: false,\n      networkChanged: false,\n      notification: false,\n    },\n  };\n\n  constructor(\n    connectionStream: Duplex,\n    { maxEventListeners = 100, shouldSendMetadata = true, jsonRpcStreamName = \"provider\" }: ProviderOptions = {}\n  ) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    // private state\n    this._state = {\n      ...TorusInpageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({ storageKey: \"Metamask-Config\" });\n\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(\n      mux.createStream(\"publicConfig\") as unknown as Duplex,\n      storeAsStream(this._publicConfigStore),\n      // RPC requests should still work if only this stream fails\n      logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")\n    );\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Duplex,\n      jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params,\n        });\n      }\n\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore(): ObservableStore<PublicConfigState> {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T>(args: RequestArguments): Promise<Maybe<T>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n  addListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n\n  once(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName: string, listener: (...args: unknown[]) => void): this {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked, networkVersion } = (await this.request({\n        method: \"wallet_getProviderState\",\n      })) as WalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], callback: (...args: any[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param method - The method to request.\n   * @param params - Any params for the method.\n   * @returns A Promise that resolves with the JSON-RPC response object for the\n   * request.\n   */\n  send<T>(method: string, params?: T[]): Promise<JRPCResponse<T>>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @param callback - An error-first callback that will receive the JSON-RPC\n   * response object.\n   */\n  send<T>(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<T>) => void): void;\n\n  /**\n   * Accepts a JSON-RPC request object, and synchronously returns the cached result\n   * for the given method. Only supports 4 specific RPC methods.\n   *\n   * @deprecated Use \"request\" instead.\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   */\n  send<T>(payload: SendSyncJsonRpcRequest): JRPCResponse<T>;\n\n  send(methodOrPayload: unknown, callbackOrArgs?: unknown): unknown {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({ method: methodOrPayload, params: callbackOrArgs }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload as JRPCRequest<unknown>, callbackOrArgs as (...args: unknown[]) => void);\n    }\n    return this._sendSync(methodOrPayload as SendSyncJsonRpcRequest);\n  }\n\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload: SendSyncJsonRpcRequest): JRPCSuccess<unknown> {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result,\n    };\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId, networkVersion }: { chainId?: string; networkVersion?: string } = {}): void {\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", { chainId, networkVersion });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  protected _warnOfDeprecation(eventName: string): void {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n\nexport default TorusInpageProvider;\n","import createHash from \"create-hash\";\n\nimport { IHashAlgorithmOptions, SRI } from \"./interfaces\";\n\nconst defaults = (options: IHashAlgorithmOptions) => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false,\n});\n\n// Generate list of hashes\nconst hashes = (options: IHashAlgorithmOptions, data: string): Record<createHash.algorithm, string> => {\n  const internalHashes: Record<string, string> = {};\n  options.algorithms.forEach((algorithm) => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n};\n// Build an integrity string\nconst integrity = (options: IHashAlgorithmOptions, sri: SRI): string => {\n  let output = \"\";\n\n  // Hash list\n  output += Object.keys(sri.hashes)\n    .map((algorithm: createHash.algorithm) => `${algorithm}-${sri.hashes[algorithm]}`)\n    .join(options.delimiter);\n\n  return output;\n};\n\nconst main = (options: IHashAlgorithmOptions, data: string): SRI | string => {\n  // Defaults\n  const finalOptions = defaults(options);\n\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined,\n  };\n  sri.integrity = integrity(finalOptions, sri);\n\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nexport default main;\n","import { EventEmitter } from \"events\";\n\nimport { getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends EventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\n\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport { getPreopenInstanceId, NOOP } from \"./utils\";\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window) => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string | null> {\n  const { document } = window;\n\n  // Use the site's favicon if it exists\n  let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\n/**\n * Sends site metadata over an RPC request.\n */\nexport default async function sendSiteMetadata(engine: JRPCEngine): Promise<void> {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata,\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error,\n    });\n  }\n}\n","import { get, setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, JRPCRequest, ObjectMultiplex, setupMultiplex, Substream } from \"@toruslabs/openlogin-jrpc\";\nimport deepmerge from \"lodash.merge\";\n\nimport configuration from \"./config\";\nimport { documentReady, handleStream, htmlToElement, runOnLoad } from \"./embedUtils\";\nimport TorusInpageProvider from \"./inpage-provider\";\nimport generateIntegrity from \"./integrity\";\nimport {\n  BUTTON_POSITION,\n  BUTTON_POSITION_TYPE,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  TorusPublicKey,\n  UnvalidatedJsonRpcRequest,\n  UserInfo,\n  VerifierArgs,\n  WALLET_OPENLOGIN_VERIFIER_MAP,\n  WALLET_PATH,\n  WhiteLabelParams,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport sendSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPreopenInstanceId,\n  getTorusUrl,\n  getUserLanguage,\n  validatePaymentProvider,\n} from \"./utils\";\n\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true,\n};\n\nconst iframeIntegrity = \"sha384-CtXpgmTZsK+NAtIX8tWrMn+8s/fTjkftnUPkLV3Hnhe7kj5CH5E92MqqBD46kp/0\";\n\nconst expectedCacheControlHeader = \"max-age=3600\";\n\nconst UNSAFE_METHODS = [\n  \"eth_sendTransaction\",\n  \"eth_signTypedData\",\n  \"eth_signTypedData_v3\",\n  \"eth_signTypedData_v4\",\n  \"personal_sign\",\n  \"eth_getEncryptionPublicKey\",\n  \"eth_decrypt\",\n];\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\", { check: false, hash: iframeIntegrity, version: \"\" });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  buttonPosition: BUTTON_POSITION_TYPE = BUTTON_POSITION.BOTTOM_LEFT;\n\n  buttonSize: number;\n\n  torusUrl: string;\n\n  torusIframe: HTMLIFrameElement;\n\n  styleLink: HTMLLinkElement;\n\n  isLoggedIn: boolean;\n\n  isInitialized: boolean;\n\n  torusWidgetVisibility: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  apiKey: string;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  torusAlertContainer: HTMLDivElement;\n\n  isIframeFullScreen: boolean;\n\n  whiteLabel: WhiteLabelParams;\n\n  requestedVerifier: string;\n\n  currentVerifier: string;\n\n  embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  ethereum: TorusInpageProvider;\n\n  provider: TorusInpageProvider;\n\n  communicationMux: ObjectMultiplex;\n\n  isLoginCallback: () => void;\n\n  paymentProviders = configuration.paymentProviders;\n\n  private loginHint = \"\";\n\n  private useWalletConnect: boolean;\n\n  private isCustomLogin = false;\n\n  constructor({ buttonPosition = BUTTON_POSITION.BOTTOM_LEFT, buttonSize = 56, modalZIndex = 99999, apiKey = \"torus-default\" }: TorusCtorArgs = {}) {\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    // this.nodeDetailManager = new NodeDetailManager();\n    // this.torusJs = new TorusJs({\n    //   metadataHost: \"https://metadata.tor.us\",\n    //   allowHost: \"https://signer.tor.us/api/allow\",\n    //   network: \"mainnet\",\n    // });\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    // deprecated: use loginConfig instead\n    enabledVerifiers = defaultVerifiers,\n    network = {\n      host: \"mainnet\",\n      chainId: null,\n      networkName: \"\",\n      blockExplorer: \"\",\n      ticker: \"\",\n      tickerName: \"\",\n    },\n    loginConfig = {},\n    showTorusButton = true,\n    integrity = {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\",\n    },\n    whiteLabel,\n    skipTKey = false,\n    useWalletConnect = false,\n    mfaLevel = \"default\",\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";\n    else torusIframeUrl.pathname += \"/popup\";\n\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n\n    const { defaultLanguage = getUserLanguage(), customTranslations = {} } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n          const initStream = this.communicationMux.getStream(\"init_stream\") as Substream;\n          initStream.on(\"data\", (chunk) => {\n            const { name, data, error } = chunk;\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n              this._displayIframe(this.isIframeFullScreen);\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              mfaLevel,\n            },\n          });\n        };\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = `${torusUrl}/popup`;\n      const resp = await fetch(fetchUrl, { cache: \"reload\" });\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(`Unexpected Cache-Control headers, got ${resp.headers.get(\"Cache-Control\")}`);\n      }\n      const response = await resp.text();\n      const calculatedIntegrity = generateIntegrity(\n        {\n          algorithms: [\"sha384\"],\n        },\n        response\n      );\n      log.info(calculatedIntegrity, \"integrity\");\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n    return undefined;\n  }\n\n  login({ verifier = \"\", login_hint: loginHint = \"\" }: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\") as Substream;\n      logOutStream.write({ name: \"logOut\" });\n      const statusStream = this.communicationMux.getStream(\"status\") as Substream;\n      const statusStreamHandler = (status) => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n\n  setProvider({ host = \"mainnet\", chainId = null, networkName = \"\", ...rest }: NetworkInterface): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\") as Substream;\n      const handler = (chunk) => {\n        const { err, success } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW,\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: {\n            host,\n            chainId,\n            networkName,\n            ...rest,\n          },\n          preopenInstanceId,\n          override: false,\n        },\n      });\n    });\n  }\n\n  showWallet(path: WALLET_PATH, params: Record<string, string> = {}): void {\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\") as Substream;\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({ name: \"show_wallet\", data: { path: finalPath } });\n\n    const showWalletHandler = (chunk) => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const { instanceId } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach((x) => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n        const walletWindow = new PopupHandler({ url: finalUrl, features: FEATURES_DEFAULT_WALLET_WINDOW });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress({ verifier, verifierId, isExtended = false }: VerifierArgs): Promise<string | TorusPublicKey> {\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(\n      url.href,\n      {\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n      },\n      { useAPIKey: true }\n    );\n  }\n\n  getUserInfo(message: string): Promise<UserInfo> {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\") as Substream;\n        userInfoAccessStream.write({ name: \"user_info_access_request\" });\n        const userInfoAccessHandler = (chunk) => {\n          const {\n            name,\n            data: { approved, payload, rejected, newRequest },\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\") as Substream;\n              const userInfoHandler = (handlerChunk) => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW,\n              });\n              userInfoStream.write({ name: \"user_info_request\", data: { message, preopenInstanceId } });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const { errors, isValid } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\") as Substream;\n        const topupHandler = (chunk) => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({ name: \"topup_request\", data: { provider, params, preopenInstanceId } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: Omit<UserInfo, \"isNewUser\"> }): Promise<void> {\n    const { privateKey, userInfo } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\") as Substream;\n        const loginHandler = (chunk) => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({ name: \"login_with_private_key_request\", data: { privateKey, userInfo } });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner(): Promise<void> {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\") as Substream;\n        const walletConnectHandler = (chunk) => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({ name: \"wallet_connect_stream_req\" });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  protected _handleWindow(preopenInstanceId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\") as Substream;\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;\n      else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n\n      const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId,\n        },\n      });\n      const closeHandler = ({ preopenInstanceId: receivedId, close }) => {\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true,\n          },\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  protected _setEmbedWhiteLabel(element: HTMLElement): void {\n    // Set whitelabel\n    const { theme } = this.whiteLabel || {};\n    if (theme) {\n      const { isDark = false, colors = {} } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  protected _getLogoUrl(): string {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  protected _sendWidgetVisibilityStatus(status: boolean): void {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\") as Substream;\n    torusWidgetVisibilityStream.write({\n      data: status,\n    });\n  }\n\n  protected _displayIframe(isFull = false): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  protected _setupWeb3(): void {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin,\n    });\n\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method, ...args) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({ jsonrpc: \"2.0\", id: getPreopenInstanceId(), method: \"eth_requestAccounts\", params: [] }, (err, response) => {\n          const { result: res } = (response as { result: unknown }) || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const { requestedVerifier } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                  // eslint-disable-next-line promise/always-return\n                  .then((_) => {\n                    this.requestedVerifier = requestedVerifier;\n                    this._showLoginPopup(true, resolve, reject);\n                  })\n                  .catch((error) => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload: UnvalidatedJsonRpcRequest | UnvalidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n\n    this.communicationMux = communicationMux;\n\n    const windowStream = communicationMux.getStream(\"window\") as Substream;\n    windowStream.on(\"data\", (chunk) => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\") as Substream;\n    widgetStream.on(\"data\", (chunk) => {\n      const { data } = chunk;\n      this._displayIframe(data);\n    });\n\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\") as Substream;\n    statusStream.on(\"data\", (status) => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n\n    this.provider = proxiedInpageProvider;\n\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n\n  protected _showLoginPopup(calledFromEmbed: boolean, resolve: (a: string[]) => void, reject: (err: Error) => void): void {\n    const loginHandler = (data) => {\n      const { err, selectedAddress } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\") as Substream;\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({ name: \"oauth_modal\", data: { calledFromEmbed } });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: { calledFromEmbed, verifier: this.requestedVerifier, preopenInstanceId, login_hint: this.loginHint },\n      });\n    }\n  }\n\n  protected _createPopupBlockAlert(preopenInstanceId: string, url: string): void {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW,\n        });\n        torusAlert.remove();\n\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n}\n\nexport default Torus;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["ComposedStore","children","_children","Object","keys","forEach","childKey","child","_addChild","updateFromChild","childValue","state","getState","putState","subscribe","ObservableStore_1","exports","MergedStore","_updateWholeState","childStates","this","map","assign","ObservableStore","initState","_state","_getState","newState","_putState","emit","partialState","handler","on","removeListener","safe_event_emitter_1","ObservableStoreStream","obsStore","objectMode","resume","push","dest","options","result","write","chunk","_encoding","callback","_size","err","unsubscribe","stream_1","__exportStar","syncTransformFn","through2_1","cb","safeApply","context","args","Reflect","apply","setTimeout","arrayClone","arr","n","length","copy","Array","i","SafeEventEmitter","type","doError","events","_events","undefined","error","er","Error","message","len","listeners","events_1","noop","ACK","BasePostMessageStream","constructor","_ref","name","target","targetWindow","window","targetOrigin","_defineProperty","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","_break","cork","_write","_onData","data","uncork","_postMessage","originConstraint","postMessage","event","origin","source","_read","_","_destroy","removeEventListener","Duplex","EventEmitter","SerializableError","code","Number","isInteger","toString","stringify","stack","createStreamMiddleware","idMap","stream","read","res","id","processNotification","end","processResponse","_err","middleware","req","next","createIdRemapMiddleware","_end","originalId","newId","randomId","done","JRPCEngine","_middleware","handle","isArray","_handleBatch","_handle","_promiseHandle","asMiddleware","_runAllMiddleware","middlewareError","isComplete","returnHandlers","_runReturnHandlers","handlerCallback","reqs","Promise","all","responses","resolve","callerReq","jsonrpc","method","_processRequest","serializeError","_checkForCompletion","middlewareStack","_runMiddleware","reverse","returnHandler","handlers","reject","Substream","parent","_parent","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","opts","_substreams","createStream","substream","_cb","once","eos","readable","writable","anyStreamEnd","_error","destroy","ignoreStream","console","warn","LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_VERIFIERS","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","BANXA","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BNB","POLYGON","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","filter","currency","has","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","sell","supportedVerifierList","values","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","prodTorusUrl","localStorageKeyPrefix","runOnLoad","fn","document","body","then","catch","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","eventName","handlerArgs","handlerWrapper","handleStream","documentReady","readyState","loglevel","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","close","networkChanged","notification","publicConfigStore","config","createErrorMiddleware","ethErrors","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","listenerCount","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","version","versionUsed","get","useAPIKey","response","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","defaultMaxListeners","getRpcPromiseCallback","unwrapResult","TorusInpageProvider","connectionStream","jsonRpcStreamName","enable","experimentalMethods","send","isDuplexStream","messages","isTorus","setMaxListeners","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","pump","_publicConfigStore","storageKey","storeAsStream","isConnected","jsonRpcConnection","rpcEngine","_rpcEngine","payload","params","includes","_sentWarnings","addListener","listener","prependListener","prependOnceListener","accounts","isUnlocked","initialized","isInternal","_payload","tryPreopenHandle","methodOrPayload","callbackOrArgs","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","streamName","isEthAccounts","finalAccounts","account","dequal","hasEmittedConnection","hashes","internalHashes","algorithms","algorithm","createHash","update","digest","main","finalOptions","delimiter","full","defaults","sri","output","join","PopupHandler","url","features","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","left","abs","top","h","w","getPopupFeatures","windowTimer","iClosedWindow","_setupTimer","setInterval","closed","clearInterval","open","href","focus","redirect","locationReplaceOnRedirect","location","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","engine","domainMetadata","originalError","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","torusIframeHtml","check","hash","crossOrigin","rel","relList","supports","head","appendChild","Torus","buttonPosition","buttonSize","modalZIndex","apiKey","configuration","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","setAPIKey","alertZIndex","isIframeFullScreen","enableLogging","enabledVerifiers","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","skipTKey","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","handleSetup","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","fetchUrl","fetch","cache","resp","headers","text","calculatedIntegrity","generateIntegrity","clearInit","login","verifier","login_hint","loginHint","ethereum","logout","statusStream","status","loggedIn","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","x","_ref2","verifierId","isExtended","walletVerifier","openloginVerifier","getUserInfo","userInfoAccessStream","approved","rejected","newRequest","userInfoStream","handlerChunk","initiateTopup","isValid","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","selectedCurrency","selectedCryptoCurrency","flat","finalCryptoCurrency","toLowerCase","validatePaymentProvider","JSON","topupStream","loginParams","userInfo","privateKey","Buffer","loginPrivKeyStream","walletConnectStream","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","logoUrl","logoLight","logoDark","isFull","size","right","bottom","metamaskStream","contentWindow","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","handleLoginCb","_showLoginPopup","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","calledFromEmbed","loginHandler","oauthStream","successAlert","btnContainer","module","equal","a","b","RegExp","flags","valueOf","key","isStream","pipe","_writableState","_readableState","duplex","transform","_transform","superPropBase","_get","__esModule","property","receiver","base","desc","getOwnPropertyDescriptor","arguments","getPrototypeOf","object"],"sourceRoot":""}