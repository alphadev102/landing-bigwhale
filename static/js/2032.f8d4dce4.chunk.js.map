{"version":3,"file":"static/js/2032.f8d4dce4.chunk.js","mappings":"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","sources":["../node_modules/global/window.js","../node_modules/@uauth/common/src/DefaultIPFSResolver.ts","../node_modules/@uauth/common/src/DefaultIssuerResolver.ts","../node_modules/@uauth/common/src/DefaultWebFingerResolver.ts","../node_modules/@uauth/common/src/version.ts","../node_modules/@uauth/common/src/MemoryDomainResolver.ts","../node_modules/jose/dist/browser/runtime/webcrypto.js","../node_modules/jose/dist/browser/lib/buffer_utils.js","../node_modules/jose/dist/browser/runtime/base64url.js","../node_modules/jose/dist/browser/util/errors.js","../node_modules/jose/dist/browser/runtime/random.js","../node_modules/jose/dist/browser/lib/iv.js","../node_modules/jose/dist/browser/runtime/is_key_like.js","../node_modules/jose/dist/browser/lib/cek.js","../node_modules/jose/dist/browser/runtime/env.js","../node_modules/jose/dist/browser/runtime/jwk_to_key.js","../node_modules/jose/dist/browser/lib/is_object.js","../node_modules/jose/dist/browser/key/import.js","../node_modules/jose/dist/browser/lib/invalid_key_input.js","../node_modules/jose/dist/browser/lib/check_key_type.js","../node_modules/jose/dist/browser/lib/decrypt_key_management.js","../node_modules/jose/dist/browser/lib/validate_crit.js","../node_modules/jose/dist/browser/jwe/flattened/encrypt.js","../node_modules/jose/dist/browser/runtime/subtle_dsa.js","../node_modules/jose/dist/browser/runtime/check_key_length.js","../node_modules/jose/dist/browser/lib/crypto_key.js","../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","../node_modules/jose/dist/browser/runtime/verify.js","../node_modules/jose/dist/browser/lib/is_disjoint.js","../node_modules/jose/dist/browser/lib/validate_algorithms.js","../node_modules/jose/dist/browser/jws/flattened/verify.js","../node_modules/jose/dist/browser/jws/compact/verify.js","../node_modules/jose/dist/browser/lib/epoch.js","../node_modules/jose/dist/browser/lib/secs.js","../node_modules/jose/dist/browser/lib/jwt_claims_set.js","../node_modules/jose/dist/browser/jwt/verify.js","../node_modules/jose/dist/browser/jwks/local.js","../node_modules/jose/dist/browser/runtime/fetch_jwks.js","../node_modules/jose/dist/browser/jwks/remote.js","../node_modules/@uauth/js/src/errors/createError.ts","../node_modules/@uauth/js/src/errors/errors.ts","../node_modules/@uauth/js/src/util/encoding/stringFromBuffer.ts","../node_modules/@uauth/js/src/util/encoding/textEncoder.ts","../node_modules/@uauth/js/src/util/getWindow.ts","../node_modules/@uauth/js/src/util/encoding/toBase64.ts","../node_modules/@uauth/js/src/util/encoding/toUrlEncodedBase64.ts","../node_modules/@uauth/js/src/util/crypto/getCrypto.ts","../node_modules/@uauth/js/src/util/crypto/getRandomBytes.ts","../node_modules/@uauth/js/src/util/crypto/getCryptoSubtle.ts","../node_modules/@uauth/js/src/util/crypto/sha256.ts","../node_modules/@uauth/js/src/util/crypto/createCodeChallengeAndVerifier.ts","../node_modules/@uauth/js/src/util/encoding/fromBase64.ts","../node_modules/@uauth/js/src/util/encoding/textDecoder.ts","../node_modules/@uauth/js/src/util/uniqueElementsFromArray.ts","../node_modules/@uauth/js/src/util/getSortedScope.ts","../node_modules/@uauth/js/src/util/objectFromURLSearchParams.ts","../node_modules/@uauth/js/src/util/objectToKey.ts","../node_modules/@uauth/js/src/util/index.ts","../node_modules/@uauth/js/src/util/crypto/verifyIdToken.ts","../node_modules/@uauth/js/src/util/encoding/decodeState.ts","../node_modules/@uauth/js/src/util/encoding/encodeState.ts","../node_modules/@uauth/js/src/util/objectFromEntries.ts","../node_modules/@uauth/js/src/util/retry.ts","../node_modules/@uauth/js/src/api/ApiError.ts","../node_modules/@uauth/js/src/api/Api.ts","../node_modules/@uauth/js/src/ClientStore.ts","../node_modules/@uauth/js/src/store/StorageStore.ts","../node_modules/@uauth/js/src/Client.ts","../node_modules/@uauth/js/src/version.ts"],"sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","import {IPFSResolver} from './types'\n\nexport default class DefaultIPFSResolver implements IPFSResolver {\n  static defaultCreateUrl(cid: string, path: string): string {\n    return `https://${cid}.ipns.dweb.link${path.replace(/^\\/?/, '/')}`\n  }\n\n  constructor(public createURL = DefaultIPFSResolver.defaultCreateUrl) {}\n\n  async resolve(uri: string): Promise<string> {\n    let cid: string\n    let path: string\n    let protocol: string\n\n    if (uri.startsWith('/ipfs/') || uri.startsWith('/ipns/')) {\n      protocol = uri.substring(1, 5)\n      cid = uri.substring(6).split('/')[0]\n      path = uri.substring(6 + cid.length)\n    } else {\n      const url = new URL(uri)\n\n      if (\n        url.hash !== '' ||\n        url.password !== '' ||\n        url.port !== '' ||\n        url.search !== '' ||\n        url.username !== ''\n      ) {\n        throw new Error('invalid ipfs uri')\n      }\n\n      protocol = url.protocol.substring(0, 4)\n      cid = url.hostname\n      path = url.pathname\n    }\n\n    if (protocol !== 'ipfs') {\n      throw new Error('only ipfs is supported, (not ipns)')\n    }\n\n    return fetch(this.createURL(cid, path)).then(resp =>\n      resp.ok ? resp.text() : Promise.reject(new Error('bad response')),\n    )\n  }\n}\n","import {IssuerResolver, IssuerResolverOptions} from './types'\n\nexport default class DefaultIssuerResolver implements IssuerResolver {\n  constructor(public options: IssuerResolverOptions) {}\n\n  async resolve(username: string, fallbackIssuer: string) {\n    let user = ''\n    let domain: string\n    if (username.includes('@')) {\n      ;[user, domain] = username.split('@', 1)\n    } else {\n      domain = username\n    }\n\n    const rel = 'http://openid.net/specs/connect/1.0/issuer'\n\n    const jrd = await this.options.webfingerResolver.resolve(\n      domain,\n      user,\n      rel,\n      fallbackIssuer,\n    )\n\n    const link = jrd.links?.find(v => v.rel === rel)\n    if (!link || !link.href) {\n      throw new Error('bad jrd')\n    }\n\n    const config = await fetch(\n      link.href + '/.well-known/openid-configuration',\n    ).then(resp =>\n      resp.ok\n        ? resp.json()\n        : Promise.reject(new Error('bad openid-configuration response')),\n    )\n\n    return config\n  }\n}\n","import {isJRD} from './JRD'\nimport {JRDDocument, WebFingerRecord, WebFingerResolverOptions} from './types'\nimport {VERSION} from './version'\n\nif (typeof window !== 'undefined') {\n  const _w = window as any\n  _w.UAUTH_VERSION = _w.UAUTH_VERSION || {}\n  _w.UAUTH_VERSION.COMMON = VERSION\n}\n\nexport default class DefaultWebFingerResolver {\n  constructor(public options: WebFingerResolverOptions) {}\n\n  async resolve(\n    domain: string,\n    user: string,\n    rel: string,\n    fallbackIssuer: string,\n  ): Promise<JRDDocument> {\n    const webfingerKey = `webfinger.${user}.${rel}`\n\n    // console.log('domain:', domain)\n    // console.log('webfingerKey:', webfingerKey)\n\n    const records = await this.options.domainResolver.records(domain, [\n      webfingerKey,\n    ])\n\n    const resource = user ? `acct:${user}@${domain}` : `${domain}`\n\n    // console.log('record value:', records[webfingerKey])\n\n    if (!records[webfingerKey]) {\n      return {subject: resource, links: [{rel, href: fallbackIssuer}]}\n    }\n\n    const webfingerRecord: WebFingerRecord = JSON.parse(records[webfingerKey])\n\n    // console.log('webfingerRecord:', webfingerRecord)\n\n    let json\n    if (typeof webfingerRecord.host === 'string') {\n      json = await fetch(\n        '/.well-known/webfinger?' +\n          new URLSearchParams({resource, rel}).toString(),\n        {headers: {Host: webfingerRecord.host}},\n      ).then(resp =>\n        resp.ok\n          ? resp.json()\n          : Promise.reject(new Error('bad webfinger response')),\n      )\n    } else if (typeof webfingerRecord.uri === 'string') {\n      const url = new URL(webfingerRecord.uri)\n\n      switch (url.protocol) {\n        case 'http:':\n        case 'https:': {\n          json = await fetch(url.toString()).then(resp =>\n            resp.ok\n              ? resp.json()\n              : Promise.reject(new Error('bad webfinger response')),\n          )\n          break\n        }\n        case 'ipfs:': {\n          json = JSON.parse(\n            await this.options.ipfsResolver.resolve(webfingerRecord.uri),\n          )\n          break\n        }\n        case 'ipns:':\n        case 'swarm:':\n        default: {\n          throw new Error('uri scheme not supported')\n        }\n      }\n    } else if (typeof webfingerRecord.value === 'string') {\n      json = JSON.parse(webfingerRecord.value)\n    } else {\n      throw new Error('bad webfinger record')\n    }\n\n    if (!isJRD(json)) {\n      throw new Error('resolved document not jrd')\n    }\n\n    if (json.subject !== resource) {\n      throw new Error('resource invalid')\n    }\n\n    return json\n  }\n}\n","export const VERSION = \"2.3.0\";\n","import {DomainResolver} from './types'\n\nexport default class MemoryDomainResolver implements DomainResolver {\n  private map: Map<string, Record<string, string>> = new Map()\n\n  set(domain: string, records: Record<string, string>): void {\n    if (!this.map.has(domain)) {\n      this.map.set(domain, records)\n      return\n    }\n\n    this.map.set(domain, {...this.map.get(domain), ...records})\n  }\n\n  records = async (\n    domain: string,\n    keys: string[],\n  ): Promise<Record<string, string>> => {\n    const records = this.map.get(domain)\n\n    if (keys.length === 0) {\n      throw new Error('no keys')\n    }\n\n    if (!records) {\n      return {}\n    }\n\n    return keys.reduce((a, v) => {\n      a[v] = records[v] || ''\n      return a\n    }, {} as Record<string, string>)\n  }\n}\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n}\nexport class JWTExpired extends JOSEError {\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n","import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","export function isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\n","import { isCloudflareWorkers } from './env.js';\nimport crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case isCloudflareWorkers() && 'OKP':\n            if (jwk.alg !== 'EdDSA') {\n                throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            switch (jwk.crv) {\n                case 'Ed25519':\n                    algorithm = { name: 'NODE-ED25519', namedCurve: 'NODE-ED25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import { decode as decodeBase64URL, encodeBase64, decodeBase64 } from '../runtime/base64url.js';\nimport { fromSPKI as importPublic } from '../runtime/asn1.js';\nimport { fromPKCS8 as importPrivate } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport formatPEM from '../lib/format_pem.js';\nimport isObject from '../lib/is_object.js';\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return importPublic(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    let spki;\n    try {\n        spki = getSPKI(x509);\n    }\n    catch (cause) {\n        throw new TypeError('failed to parse the X.509 certificate', { cause });\n    }\n    return importPublic(spki, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS8 formatted string');\n    }\n    return importPrivate(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    if (typeof alg !== 'string' || !alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n","import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                partyUInfo = base64url(joseHeader.apu);\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                partyVInfo = base64url(joseHeader.apv);\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, base64url(joseHeader.p2s));\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            const iv = base64url(joseHeader.iv);\n            const tag = base64url(joseHeader.tag);\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { isCloudflareWorkers } from './env.js';\nimport { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case isCloudflareWorkers() && 'EdDSA':\n            const { namedCurve } = algorithm;\n            return { name: namedCurve, namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","import { isCloudflareWorkers } from '../runtime/env.js';\nfunction unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case isCloudflareWorkers() && 'EdDSA': {\n            if (!isAlgorithm(key.algorithm, 'NODE-ED25519'))\n                throw unusable('NODE-ED25519');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    const signature = base64url(jws.signature);\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = base64url(jws.payload);\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { issuer } = options;\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    const { subject } = options;\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    const { audience } = options;\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || options.maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (options.maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof options.maxTokenAge === 'number' ? options.maxTokenAge : secs(options.maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            throw new JWKSMultipleMatchingKeys();\n        }\n        const cached = this._cached.get(jwk) || this._cached.set(jwk, {}).get(jwk);\n        if (cached[alg] === undefined) {\n            const keyObject = await importJWK({ ...jwk, ext: true }, alg);\n            if (keyObject instanceof Uint8Array || keyObject.type !== 'public') {\n                throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n            }\n            cached[alg] = keyObject;\n        }\n        return cached[alg];\n    }\n}\nexport function createLocalJWKSet(jwks) {\n    return LocalJWKSet.prototype.getKey.bind(new LocalJWKSet(jwks));\n}\n","import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { isCloudflareWorkers } from '../runtime/env.js';\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\nimport { isJWKSLike, LocalJWKSet } from './local.js';\nclass RemoteJWKSet extends LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            return new Promise((resolve) => {\n                const isDone = () => {\n                    if (this._pendingFetch === undefined) {\n                        resolve();\n                    }\n                    else {\n                        setTimeout(isDone, 5);\n                    }\n                };\n                isDone();\n            });\n        }\n        if (!this._pendingFetch) {\n            this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n                .then((json) => {\n                if (!isJWKSLike(json)) {\n                    throw new JWKSInvalid('JSON Web Key Set malformed');\n                }\n                this._jwks = { keys: json.keys };\n                this._jwksTimestamp = Date.now();\n                this._pendingFetch = undefined;\n            })\n                .catch((err) => {\n                this._pendingFetch = undefined;\n                throw err;\n            });\n        }\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    return RemoteJWKSet.prototype.getKey.bind(new RemoteJWKSet(url, options));\n}\n","export default function createError(name: string, message: string) {\n  return class extends Error {\n    name = name\n    constructor() {\n      super(message)\n    }\n  }\n}\n","import createError from './createError'\n\nexport const PopupTimeoutError = createError(\n  'PopupTimeoutError',\n  'The popup has timed out.',\n)\n\nexport const PopupClosedError = createError(\n  'PopupClosedError',\n  'The popup was closed.',\n)\n","const stringFromBuffer = (buf: ArrayBuffer): string =>\n  String.fromCharCode.apply(null, Array.from(new Uint8Array(buf)))\n\nexport default stringFromBuffer\n","const textEncoder = new TextEncoder()\n\nexport default textEncoder\n","import window from 'global'\n\nconst getWindow: () => Window & typeof globalThis = () => window\n\nexport default getWindow\n","import getWindow from '../getWindow'\n\nconst toBase64 = (str: string) => getWindow().btoa(str)\n\nexport default toBase64\n","import toBase64 from './toBase64'\n\nconst toUrlEncodedBase64 = (str: string) => {\n  return toBase64(str)\n    .replace(/=+$/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n}\n\nexport default toUrlEncodedBase64\n","import getWindow from '../getWindow'\n\n//ie 11.x uses msCrypto\nconst getCrypto = () =>\n  (getWindow().crypto ?? (getWindow() as any).msCrypto) as Crypto\n\nexport default getCrypto\n","import getCrypto from './getCrypto'\n\nconst getRandomBytes = (length: number): Uint8Array =>\n  getCrypto().getRandomValues(new Uint8Array(length))\n\nexport default getRandomBytes\n","import getCrypto from './getCrypto'\n\n//safari 10.x uses webkitSubtle\nconst getCryptoSubtle = () =>\n  getCrypto().subtle ?? (getCrypto() as any).webkitSubtle\n\nexport default getCryptoSubtle\n","import getWindow from '../getWindow'\nimport getCryptoSubtle from './getCryptoSubtle'\n\nconst sha256 = async (buf: ArrayBuffer): Promise<ArrayBuffer> => {\n  const digestOp: any = getCryptoSubtle().digest({name: 'SHA-256'}, buf)\n\n  // This is for legacy IE Hashing\n  if ((getWindow() as any).msCrypto) {\n    return new Promise((res, rej) => {\n      digestOp.oncomplete = (e: any) => res(e.target.result)\n      digestOp.onerror = (e: ErrorEvent) => rej(e.error)\n      digestOp.onabort = () => rej('The digest operation was aborted')\n    })\n  }\n\n  return await digestOp\n}\n\nexport default sha256\n","import type {CodeChallengeMethod} from '../../types'\nimport stringFromBuffer from '../encoding/stringFromBuffer'\nimport textEncoder from '../encoding/textEncoder'\nimport toUrlEncodedBase64 from '../encoding/toUrlEncodedBase64'\nimport getRandomBytes from './getRandomBytes'\nimport sha256 from './sha256'\n\nconst pkceMask =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_~.'\n\nconst createCodeVerifier = (length: number) => {\n  return Array.from(getRandomBytes(length))\n    .map(v => pkceMask[v % pkceMask.length])\n    .join('')\n}\n\nconst createCodeChallengeAndVerifier = async (\n  length = 43,\n  method: CodeChallengeMethod = 'S256',\n): Promise<{verifier: string; challenge: string}> => {\n  const verifier = createCodeVerifier(length)\n\n  switch (method) {\n    case 'plain':\n      return {verifier, challenge: verifier}\n    case 'S256':\n      return {\n        verifier,\n        challenge: toUrlEncodedBase64(\n          stringFromBuffer(await sha256(textEncoder.encode(verifier).buffer)),\n        ),\n      }\n    default:\n      throw new Error('bad challenge method')\n  }\n}\n\nexport default createCodeChallengeAndVerifier\n","import getWindow from '../getWindow'\n\nconst fromBase64 = (str: string): string => getWindow().atob(str)\n\nexport default fromBase64\n","const textDecoder = new TextDecoder()\n\nexport default textDecoder\n","export default function uniqueElementsFromArray<T>(arr: T[]): T[] {\n  return Array.from(new Set(arr))\n}\n","import uniqueElementsFromArray from './uniqueElementsFromArray'\n\nconst getSortedScope = (scope: string) =>\n  uniqueElementsFromArray(scope.trim().split(/\\s+/)).sort().join(' ')\n\nexport default getSortedScope\n","export default function objectFromURLSearchParams(\n  params: URLSearchParams,\n): Record<string, string | string[]> {\n  const obj = {}\n\n  params.forEach((_, key) => {\n    if (params.getAll(key).length > 1) {\n      obj[key] = params.getAll(key)\n    } else {\n      obj[key] = params.get(key)\n    }\n  })\n\n  return obj\n}\n","export default function objectToKey(object: Record<PropertyKey, any>): string {\n  const params = new URLSearchParams(\n    [...Object.entries(object)].filter(([k, v]) => k != null && v != null),\n  )\n  params.sort()\n  return params.toString()\n}\n","import createCodeChallengeAndVerifier from './crypto/createCodeChallengeAndVerifier'\nimport getCrypto from './crypto/getCrypto'\nimport getCryptoSubtle from './crypto/getCryptoSubtle'\nimport getRandomBytes from './crypto/getRandomBytes'\nimport sha256 from './crypto/sha256'\nimport verifyIdToken from './crypto/verifyIdToken'\nimport decodeState from './encoding/decodeState'\nimport encodeState from './encoding/encodeState'\nimport fromBase64 from './encoding/fromBase64'\nimport stringFromBuffer from './encoding/stringFromBuffer'\nimport textDecoder from './encoding/textDecoder'\nimport textEncoder from './encoding/textEncoder'\nimport toBase64 from './encoding/toBase64'\nimport toUrlEncodedBase64 from './encoding/toUrlEncodedBase64'\n\nconst crypto = {\n  createCodeChallengeAndVerifier,\n  getCrypto,\n  getCryptoSubtle,\n  getRandomBytes,\n  sha256,\n  verifyIdToken,\n}\n\nconst encoding = {\n  decodeState,\n  encodeState,\n  fromBase64,\n  textDecoder,\n  textEncoder,\n  toBase64,\n  toUrlEncodedBase64,\n  stringFromBuffer,\n}\n\nexport {default as getSortedScope} from './getSortedScope'\nexport {default as getWindow} from './getWindow'\nexport {default as objectFromEntries} from './objectFromEntries'\nexport {default as objectFromURLSearchParams} from './objectFromURLSearchParams'\nexport {default as objectToKey} from './objectToKey'\nexport {default as retry} from './retry'\nexport {default as uniqueElementsFromArray} from './uniqueElementsFromArray'\nexport {crypto, encoding}\n","import {IdToken} from '@uauth/common'\nimport {jwtVerify, createRemoteJWKSet} from 'jose'\n\nconst verifyIdToken = async (\n  jwks_uri: string,\n  id_token: string,\n  nonce: string,\n  client_id: string,\n) => {\n  const {payload} = await jwtVerify(\n    id_token,\n    createRemoteJWKSet(new URL(jwks_uri)),\n    {audience: client_id},\n  )\n\n  const idToken: IdToken = payload as any\n\n  idToken.__raw = id_token\n\n  if (nonce !== idToken.nonce) {\n    throw new Error(\"nonces don't match\")\n  }\n\n  return idToken\n}\n\nexport default verifyIdToken\n","import fromBase64 from './fromBase64'\n\nconst decodeState = <T>(state: string): T => {\n  const [, v, ...b] = state.split('.')\n\n  if (b.length > 0) {\n    throw new Error('failed to decode state')\n  }\n\n  return v?.length > 0\n    ? JSON.parse(decodeURIComponent(/* unescape */ fromBase64(v)))\n    : undefined\n}\n\nexport default decodeState\n","import getRandomBytes from '../crypto/getRandomBytes'\nimport stringFromBuffer from './stringFromBuffer'\nimport toUrlEncodedBase64 from './toUrlEncodedBase64'\n\nconst encodeState = <T>(state: T): string =>\n  `${toUrlEncodedBase64(stringFromBuffer(getRandomBytes(32)))}.${\n    state == null\n      ? ''\n      : toUrlEncodedBase64(\n          /* escape */ encodeURIComponent(JSON.stringify(state)),\n        )\n  }`\n\nexport default encodeState\n","export default function objectFromEntries<T = any>(\n  entries: Iterable<readonly [PropertyKey, T]>,\n): Record<PropertyKey, T> {\n  const object: Record<PropertyKey, T> = {}\n  for (const [k, v] of entries) {\n    object[k] = v\n  }\n  return object\n}\n","function retry<T>(\n  fn: () => Promise<T>,\n  retries = 4,\n  timeout = 250,\n  factor = 2,\n  err = null,\n): Promise<T> {\n  if (retries <= 0) {\n    return Promise.reject(err)\n  }\n\n  return fn().catch(async err => {\n    await new Promise(r => setTimeout(r, timeout))\n    return retry(fn, retries - 1, timeout * factor, factor, err)\n  })\n}\n\nexport default retry\n","import {ErrorResponse} from './types'\n\nexport default class ApiError extends Error {\n  constructor(\n    public code: string,\n    public description: string,\n    public uri?: string,\n  ) {\n    super(`${code}: ${description}${uri ? `\\nSee more at ${uri}.` : ''}`)\n  }\n\n  static fromResponse(response: ErrorResponse) {\n    return new ApiError(\n      response.error,\n      response.error_description,\n      response.error_uri,\n    )\n  }\n}\n","import {PopupClosedError, PopupTimeoutError} from '../errors/errors'\nimport {UserInfo} from '../types'\nimport {objectFromURLSearchParams} from '../util'\nimport toBase64 from '../util/encoding/toBase64'\nimport ApiError from './ApiError'\nimport {\n  ApiOptions,\n  AuthorizeRequest,\n  AuthorizeResponse,\n  AuthorizeWithDeviceRequest,\n  AuthorizeWithDeviceResponse,\n  BaseRequest,\n  IntrospectRequest,\n  IntrospectResponse,\n  JWKSRequest,\n  JWKSResponse,\n  LogoutRequest,\n  PopupConfig,\n  RevokeRequest,\n  TokenRequest,\n  TokenResponse,\n  TokenWithAuthorizationCodeRequest,\n  TokenWithClientCredentialsRequest,\n  TokenWithDeviceCodeRequest,\n  TokenWithPasswordRequest,\n  TokenWithRefreshTokenRequest,\n  TokenWithSAMLRequest,\n  UserInfoRequest,\n} from './types'\n\nexport default class Api {\n  static Error = ApiError\n\n  constructor(public options: ApiOptions) {}\n\n  buildAuthorizeUrl(request: AuthorizeRequest): string {\n    return this._buildUrl(request)\n  }\n\n  buildLogoutUrl(request: LogoutRequest): string {\n    return this._buildUrl(request)\n  }\n\n  parseAuthorizeResponseFromFragment(url: string): AuthorizeResponse {\n    return this._validateResponse(\n      objectFromURLSearchParams(\n        new URLSearchParams(new URL(url).hash.substring(1)),\n      ),\n    )\n  }\n\n  parseAuthorizeResponseFromQuery(url: string): AuthorizeResponse {\n    return this._validateResponse(\n      objectFromURLSearchParams(new URL(url).searchParams),\n    )\n  }\n\n  async authorizeWithPopup(\n    request: AuthorizeRequest,\n    config: PopupConfig = {},\n  ): Promise<AuthorizeResponse> {\n    if (!window) {\n      throw new Error('no window in options')\n    }\n\n    const url = this.buildAuthorizeUrl(request)\n\n    let popup: Window | undefined | null = config.popup\n    const timeout: number = config.timeout ?? 3600000\n\n    if (!popup) {\n      const width = config.width ?? 600\n      const height = config.height ?? 800\n\n      popup = window.open(\n        url,\n        'uauth:authorize:popup',\n        `left=${window.screenX + (window.innerWidth - width) / 2},top=${\n          window.screenY + (window.innerHeight - height) / 2\n        },width=${width},height=${height},resizable,scrollbars=yes,status=1`,\n      )\n\n      if (!popup) {\n        throw new Error('popup failed to be constructed')\n      }\n    } else {\n      popup.location.href = url\n    }\n\n    let recievedMessage = false\n    const response: AuthorizeResponse = await new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        if (!recievedMessage) {\n          clearInterval(intervalId)\n          popup!.close()\n          reject(new PopupTimeoutError())\n        }\n      }, timeout)\n\n      const intervalId = setInterval(() => {\n        // Check if popup is closed\n        if (!recievedMessage && popup?.closed) {\n          clearInterval(intervalId)\n          clearTimeout(timeoutId)\n          reject(new PopupClosedError())\n        }\n\n        // Check if popup doesn't violate the \"Same-Origin\" policy and has a valid url\n        let href: string\n        let url: URL\n        let redirectUrl: URL\n        try {\n          href = popup!.location.href\n          url = new URL(href)\n          redirectUrl = new URL(request.redirect_uri)\n        } catch (error) {\n          return // Exit if not\n        }\n\n        // Check to see that the redirect was correct\n        url.hash = ''\n        if (url.href === redirectUrl.href) {\n          recievedMessage = true\n\n          clearInterval(intervalId)\n          clearTimeout(timeoutId)\n          popup!.close()\n\n          try {\n            resolve(this.parseAuthorizeResponseFromFragment(href))\n          } catch (error) {\n            reject(error)\n          }\n        }\n      }, 10)\n    })\n\n    return response\n  }\n\n  async authorizeWithDevice(\n    request: AuthorizeWithDeviceRequest,\n  ): Promise<AuthorizeWithDeviceResponse> {\n    return {} as any\n  }\n\n  async getToken(request: TokenRequest): Promise<TokenResponse> {\n    const [input, init] = this._buildRequest(request, {method: 'POST'})\n    return this._fetchJSON(input, init)\n  }\n\n  introspect(request: IntrospectRequest): Promise<IntrospectResponse> {\n    const [input, init] = this._buildRequest(request, {method: 'POST'})\n    return this._fetchJSON(input, init)\n  }\n\n  async revoke(request: RevokeRequest): Promise<void> {\n    const [input, init] = this._buildRequest(request, {method: 'POST'})\n    await this._fetchJSON(input, init)\n  }\n\n  userinfo(request: UserInfoRequest): Promise<UserInfo> {\n    const [input, init] = this._buildRequest(request, {\n      method: 'GET',\n      headers: {Authorization: `Basic ${request.access_token}`},\n    })\n    return this._fetchJSON(input, init)\n  }\n\n  jwks(request: JWKSRequest): Promise<JWKSResponse> {\n    const [input, init] = this._buildRequest(request, {method: 'GET'})\n    return this._fetchJSON(input, init)\n  }\n\n  getTokenWithAuthorizationCode(\n    request: TokenWithAuthorizationCodeRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithRefreshToken(\n    request: TokenWithRefreshTokenRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithDeviceCode(\n    request: TokenWithDeviceCodeRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithPassword(\n    request: TokenWithPasswordRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithSAML(request: TokenWithSAMLRequest): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithClientCredentials(\n    request: TokenWithClientCredentialsRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  private _buildUrl(request: BaseRequest): string {\n    const {url, ...searchParams} = request\n\n    const urlObject = new URL(url)\n\n    const params = new URLSearchParams()\n\n    for (const [k, v] of Object.entries(searchParams)) {\n      if (k != null && v != null) {\n        params.append(k, v)\n      }\n    }\n\n    urlObject.search = params.toString()\n    return urlObject.toString()\n  }\n\n  private _buildRequest(\n    request: BaseRequest,\n    options: {method: 'GET' | 'POST'; headers?: HeadersInit},\n  ): [RequestInfo, RequestInit] {\n    const {url, client_id, client_secret, client_auth_method, ...rest} = request\n    const {headers: headersInit, method} = options\n\n    const headers = new Headers(this.options.headers ?? [])\n\n    new Headers(headersInit ?? []).forEach((value, key) => {\n      headers.set(key, value)\n    })\n\n    if (options.method === 'POST') {\n      headers.set('Content-Type', 'application/x-www-form-urlencoded')\n    }\n\n    const body: Record<string, any> = {\n      client_id,\n      ...rest,\n    }\n\n    switch (client_auth_method) {\n      case 'client_secret_basic':\n        // throw new Error('only client_secret_post supported')\n        if (client_secret == null) {\n          throw new Error('Client secret not present!')\n        }\n\n        headers.set(\n          'Authorization',\n          `Basic ${toBase64(`${client_id}:${client_secret}`)}`,\n        )\n\n        break\n      case 'client_secret_post':\n        if (client_secret == null) {\n          throw new Error('Client secret not present!')\n        }\n\n        body.client_secret = client_secret\n\n        break\n      case 'none':\n      case undefined:\n      case null:\n        break\n      default:\n        throw new Error('Bad client_auth_method')\n    }\n\n    return [\n      url,\n      {\n        method,\n        headers,\n        body:\n          method === 'POST'\n            ? new URLSearchParams(Object.entries(body))\n            : undefined,\n      },\n    ]\n  }\n\n  private _validateResponse(response: any) {\n    if (response.error) {\n      throw Api.Error.fromResponse(response)\n    }\n\n    return response\n  }\n\n  private async _fetchJSON(\n    input: RequestInfo,\n    init: RequestInit,\n  ): Promise<any> {\n    if (init.headers) {\n      const headers = new Headers(init.headers)\n      headers.set('Accept', 'application/json')\n      init.headers = headers\n    } else {\n      init.headers = {Accept: 'application/json'}\n    }\n\n    const response = await window?.fetch(input, init)\n\n    const json = await response.json()\n    this._validateResponse(json)\n\n    if (!response.ok) {\n      throw new Error(\n        `${response.status} ${response.statusText}: ${JSON.stringify(json)}`,\n      )\n    }\n\n    return json\n  }\n}\n","import {AuthorizeRequest, LogoutRequest} from './api'\nimport type Client from './Client'\nimport {Authorization, AuthorizationOptions} from './types'\nimport * as util from './util'\n\nclass ClientStore {\n  constructor(public client: Client) {}\n\n  private async get<T>(\n    key: string,\n    {mustExist = false, deleteAfter = false} = {},\n  ): Promise<T | undefined> {\n    const entry = await this.client.getStore().get(key)\n    if (entry == null) {\n      if (mustExist) {\n        throw new Error(`${key} does not exist in store`)\n      }\n      return\n    }\n\n    const {value, expiresAt} = entry\n    if (expiresAt !== 0 && expiresAt < Date.now()) {\n      await this.client.getStore().delete(key)\n      if (mustExist) {\n        throw new Error(`${key} does not exist in store`)\n      }\n      return\n    }\n\n    if (deleteAfter) {\n      await this.client.getStore().delete(key)\n    }\n\n    return value\n  }\n\n  private async set<T>(key: string, value: any, timeout = 0) {\n    await this.client.getStore().set(key, {\n      expiresAt: timeout === 0 ? 0 : Date.now() + timeout,\n      value,\n    })\n  }\n\n  async setAuthorizeRequest(request: AuthorizeRequest): Promise<void> {\n    await this.set('request', request, 300_000 /* 5 minutes */)\n  }\n  getAuthorizeRequest(): Promise<AuthorizeRequest> {\n    return this.get<AuthorizeRequest>('request', {\n      mustExist: true,\n      deleteAfter: true,\n    }) as Promise<AuthorizeRequest>\n  }\n\n  async setLogoutRequest(request: LogoutRequest): Promise<void> {\n    await this.set('logout-request', request, 300_000 /* 5 minutes */)\n  }\n  getLogoutRequest(): Promise<LogoutRequest> {\n    return this.get<LogoutRequest>('logout-request', {\n      mustExist: true,\n      deleteAfter: true,\n    }) as Promise<LogoutRequest>\n  }\n\n  async setVerifier(challenge: string, verifier: string): Promise<void> {\n    await this.set(`verifier:${challenge}`, verifier, 300_000 /* 5 minutes */)\n  }\n  getVerifier(challenge: string): Promise<string> {\n    return this.get(`verifier:${challenge}`, {\n      mustExist: true,\n      deleteAfter: true,\n    }) as Promise<string>\n  }\n\n  async setOpenIdConfiguration(\n    username: string,\n    openidConfiguration: any,\n    timeout: number,\n  ): Promise<void> {\n    await this.set(\n      `openidConfiguration:${username}`,\n      openidConfiguration,\n      timeout,\n    )\n  }\n  getOpenIdConfiguration(username: string): Promise<any> {\n    return this.get(`openidConfiguration:${username}`)\n  }\n\n  async setAuthorization(authorization: Authorization): Promise<void> {\n    const authorizationOptions: AuthorizationOptions = {\n      clientID: authorization.idToken.aud,\n      resource: authorization.resource,\n      scope: authorization.scope,\n      username: authorization.idToken.sub,\n    }\n\n    const expiresIn = authorization.expiresAt - Date.now()\n\n    await this.set('username', authorizationOptions.username, expiresIn)\n    await this.set(\n      await this._getAuthorizationKey(authorizationOptions),\n      authorization,\n      expiresIn,\n    )\n  }\n  async deleteAuthorization(options: AuthorizationOptions): Promise<boolean> {\n    const fallbackUsername = await this.get<string>('username')\n\n    options.username = await this._getUsername(\n      options.username,\n      fallbackUsername,\n    )\n\n    if (options.username === fallbackUsername) {\n      await this.client.getStore().delete('username')\n    }\n\n    return this.client\n      .getStore()\n      .delete(await this._getAuthorizationKey(options))\n  }\n  async getAuthorization(\n    options: AuthorizationOptions,\n  ): Promise<Authorization> {\n    return this.get(await this._getAuthorizationKey(options), {\n      mustExist: true,\n    }) as Promise<Authorization>\n  }\n\n  private async _getAuthorizationKey(\n    options: AuthorizationOptions,\n  ): Promise<string> {\n    return `authorization?${util.objectToKey({\n      username: await this._getUsername(\n        options.username,\n        await this.get('username'),\n      ),\n      clientID: options.clientID ?? this.client.fallbackLoginOptions.clientID,\n      scope: util.getSortedScope(\n        options.scope ?? this.client.fallbackLoginOptions.scope,\n      ),\n      resource: options.resource ?? this.client.fallbackLoginOptions.resource,\n    })}`\n  }\n\n  private async _getUsername(username?: string, fallbackUsername?: string) {\n    if (username == null && fallbackUsername == null) {\n      throw new Error('no username given')\n    }\n\n    return username ?? fallbackUsername\n  }\n}\n\nexport default ClientStore\n","import {Store} from './types'\n\nexport default class StorageStore implements Store {\n  constructor(public storage: Storage) {}\n\n  get(key: string): string | null {\n    const value = this.storage.getItem(key)\n\n    if (value != null) {\n      return JSON.parse(value)\n    }\n\n    return null\n  }\n\n  delete(key: string): boolean {\n    this.storage.removeItem(key)\n    return true\n  }\n\n  set(key: string, value): this {\n    this.storage.setItem(key, JSON.stringify(value))\n    return this\n  }\n}\n","import {\n  DefaultIPFSResolver,\n  DefaultIssuerResolver,\n  DefaultWebFingerResolver,\n  DomainResolver,\n  IssuerResolver,\n} from '@uauth/common'\nimport {\n  Resolution,\n  ResolutionError,\n  ResolutionErrorCode,\n} from '@unstoppabledomains/resolution'\nimport {\n  Api,\n  AuthorizeRequest,\n  AuthorizeResponse,\n  LogoutRequest,\n  LogoutResponse,\n  PopupConfig,\n  TokenResponse,\n  TokenWithAuthorizationCodeRequest,\n  UserInfoRequest,\n} from './api'\nimport ClientStore from './ClientStore'\nimport {StorageStore, Store, StoreType} from './store'\nimport {\n  Authorization,\n  AuthorizationOptions,\n  VerifiedAddress,\n  BaseLoginOptions,\n  BaseLogoutOptions,\n  CacheOptions,\n  ClientOptions,\n  FullLoginOptions,\n  LoginCallbackOptions,\n  LoginCallbackResponse,\n  LoginOptions,\n  LogoutCallbackOptions,\n  LogoutOptions,\n  UserInfo,\n  UserOptions,\n} from './types'\nimport * as util from './util'\nimport {VERSION} from './version'\n\nif (typeof window !== 'undefined') {\n  const _w = window as any\n  _w.UAUTH_VERSION = _w.UAUTH_VERSION || {}\n  _w.UAUTH_VERSION.JS = VERSION\n}\n\nexport default class Client {\n  util = util\n  private _clientStore = new ClientStore(this)\n  api: Api\n  fallbackIssuer: string\n  fallbackLoginOptions: BaseLoginOptions\n  fallbackLogoutOptions: BaseLogoutOptions\n  cacheOptions: CacheOptions\n  issuerResolver: IssuerResolver\n  resolution: DomainResolver\n\n  store?: Store\n  storeOptions: {\n    store?: Store\n    storeType: StoreType\n  }\n\n  getStore(): Store {\n    if (this.store) {\n      return this.store\n    }\n\n    if (this.storeOptions.store) {\n      this.store = this.storeOptions.store\n    } else {\n      const storeType = this.storeOptions.storeType\n      switch (storeType) {\n        case 'localstore':\n          this.store = new StorageStore(window.localStorage)\n          break\n        case 'sessionstore':\n          this.store = new StorageStore(window.sessionStorage)\n          break\n        case 'memory':\n          this.store = new Map<string, string>()\n          break\n        default:\n          throw new Error('Bad storeType provided')\n      }\n    }\n\n    return this.store\n  }\n\n  constructor(options: ClientOptions) {\n    this.fallbackIssuer =\n      options.fallbackIssuer ?? 'https://auth.unstoppabledomains.com'\n    this.resolution = options.resolution ?? new Resolution()\n\n    this.storeOptions = {\n      store: options.store,\n      storeType: options.storeType ?? 'localstore',\n    }\n\n    this.cacheOptions = {\n      issuer: false,\n      userinfo: true,\n      ...(options.cacheOptions ?? {}),\n    }\n\n    this.api = new Api({\n      headers: {},\n    })\n\n    this.fallbackLoginOptions = {\n      clientID: options.clientID,\n      clientSecret: options.clientSecret,\n      clientAuthMethod:\n        options.clientAuthMethod ??\n        (options.clientSecret ? 'client_secret_post' : 'none'),\n      maxAge: options.maxAge ?? 300000,\n      prompt: options.prompt ?? 'login',\n      resource: options.resource,\n      redirectUri: options.redirectUri,\n      responseMode: options.responseMode ?? 'fragment',\n      scope: options.scope ?? 'openid wallet',\n    }\n\n    this.fallbackLogoutOptions = {\n      rpInitiatedLogout:\n        options.rpInitiatedLogout ??\n        typeof options.postLogoutRedirectUri === 'string',\n      postLogoutRedirectUri: options.postLogoutRedirectUri,\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    this.issuerResolver = new DefaultIssuerResolver({\n      webfingerResolver: new DefaultWebFingerResolver({\n        ipfsResolver: new DefaultIPFSResolver((...args) =>\n          (options.createIpfsUrl || DefaultIPFSResolver.defaultCreateUrl)(\n            ...args,\n          ),\n        ),\n        domainResolver: {\n          async records(\n            domain: string,\n            keys: string[],\n          ): Promise<Record<string, string>> {\n            try {\n              const records = await self.resolution.records(domain, keys)\n              return records\n            } catch (error) {\n              if (\n                error instanceof ResolutionError &&\n                error.code === ResolutionErrorCode.UnspecifiedResolver\n              ) {\n                return {}\n              }\n              throw error\n            }\n          },\n        },\n      }),\n    })\n  }\n\n  async buildAuthorizeRequest(\n    options: Partial<LoginOptions>,\n  ): Promise<AuthorizeRequest> {\n    // TODO: Ensure nothing is missing\n    const loginOptions: FullLoginOptions = {\n      ...this.fallbackLoginOptions,\n      ...options,\n    } as FullLoginOptions\n\n    const loginHint = options.username\n\n    const openidConfiguration = await this.getOpenIdConfiguration(loginHint)\n\n    const {verifier, challenge} =\n      await util.crypto.createCodeChallengeAndVerifier(43, 'S256')\n\n    const nonce = util.encoding.toBase64(\n      util.encoding.stringFromBuffer(util.crypto.getRandomBytes(32)),\n\n      /* util.encoding.textDecoder.decode */\n    )\n\n    const state = util.encoding.encodeState(loginOptions.state)\n\n    const request: AuthorizeRequest = {\n      // Generated options\n      url: openidConfiguration.authorization_endpoint,\n      code_challenge: challenge,\n      nonce,\n      state,\n\n      // Builder options\n      flow_id: loginOptions.flowId ?? 'login',\n      login_hint: loginHint,\n\n      // Parameterized options\n      client_id: loginOptions.clientID,\n      client_secret: loginOptions.clientSecret,\n      client_auth_method: loginOptions.clientAuthMethod,\n      max_age: loginOptions.maxAge,\n      prompt: loginOptions.prompt,\n      resource: loginOptions.resource,\n      redirect_uri: loginOptions.redirectUri,\n      response_mode: loginOptions.responseMode,\n      scope: loginOptions.scope,\n\n      // Constant options\n      code_challenge_method: 'S256',\n      response_type: 'code',\n\n      // package info\n      package_name: loginOptions?.packageName || '@uauth/js',\n      package_version: loginOptions?.packageVersion || VERSION,\n    }\n\n    await this._clientStore.setAuthorizeRequest(request)\n    await this._clientStore.setVerifier(challenge, verifier)\n\n    return request\n  }\n\n  async loginWithPopup(\n    options: Partial<Omit<LoginOptions, 'responseMode'>> = {},\n    config?: PopupConfig,\n  ): Promise<Authorization> {\n    ;(options as Partial<LoginOptions>).responseMode = 'fragment'\n    const request = await this.buildAuthorizeRequest(options)\n    const response = await this.api.authorizeWithPopup(request, config)\n    const authorization = await this.verifyAuthorizeResponse(request, response)\n\n    return authorization\n  }\n\n  async login(options: Partial<LoginOptions> = {}): Promise<void> {\n    const request: AuthorizeRequest = await this.buildAuthorizeRequest(options)\n\n    const url = this.api.buildAuthorizeUrl(request)\n\n    if (typeof options.beforeRedirect === 'function') {\n      await options.beforeRedirect(url)\n    }\n\n    window.location.href = url\n  }\n\n  async loginCallback<T>(\n    options?: Partial<LoginCallbackOptions>,\n  ): Promise<LoginCallbackResponse<T>> {\n    const url = options?.url ?? window.location.href\n\n    const request: AuthorizeRequest =\n      await this._clientStore.getAuthorizeRequest()\n\n    let response: AuthorizeResponse\n    if (request.response_mode === 'fragment') {\n      response = this.api.parseAuthorizeResponseFromFragment(url)\n    } else if (request.response_mode === 'query') {\n      response = this.api.parseAuthorizeResponseFromQuery(url)\n    } else {\n      throw new Error('Unsupported response_mode')\n    }\n\n    return {\n      authorization: await this.verifyAuthorizeResponse(request, response),\n      state: util.encoding.decodeState<T>(request.state),\n    }\n  }\n\n  async verifyAuthorizeResponse(\n    request: AuthorizeRequest,\n    response: AuthorizeResponse,\n  ): Promise<Authorization> {\n    if (request.state !== response.state) {\n      throw new Error(\"states don't match\")\n    }\n\n    const openidConfiguration = await this.getOpenIdConfiguration(\n      request.login_hint,\n    )\n\n    const tokenRequest: TokenWithAuthorizationCodeRequest = {\n      url: openidConfiguration.token_endpoint,\n      client_id: request.client_id,\n      client_secret: request.client_secret,\n      client_auth_method: request.client_auth_method,\n      grant_type: 'authorization_code',\n      code: response.code,\n      code_verifier: await this._clientStore.getVerifier(\n        request.code_challenge,\n      ),\n      redirect_uri: request.redirect_uri,\n    }\n\n    const tokenResponse: TokenResponse =\n      await this.api.getTokenWithAuthorizationCode(tokenRequest)\n\n    const idToken = await util.crypto.verifyIdToken(\n      openidConfiguration.jwks_uri,\n      tokenResponse.id_token!,\n      request.nonce,\n      request.client_id,\n    )\n\n    const authorization: Authorization = {\n      accessToken: tokenResponse.access_token,\n      // TODO: The server isn't returning the scope along with the callback and\n      // I havn't found the oidc docs to figure out if this is a bug.\n      expiresAt: Date.now() + tokenResponse.expires_in * 1000,\n      idToken,\n      scope: util.getSortedScope(request.scope),\n      resource: request.resource,\n    }\n\n    await this._clientStore.setAuthorization(authorization)\n\n    return authorization\n  }\n\n  // getVerifiedAccounts retrieves all verified accounts associated with the domain\n  getVerifiedAccounts(\n    authorization: Authorization,\n    symbols: string[] = [],\n  ): VerifiedAddress[] {\n    // ensure the authorization includes verified_addresses field\n    const verifiedAddresses: VerifiedAddress[] = []\n    if (!authorization.idToken.verified_addresses) {\n      return verifiedAddresses\n    }\n    authorization.idToken.verified_addresses.forEach((record: any) => {\n      // filter for requested symbols if provided\n      if (symbols.length > 0 && !symbols.includes(record.symbol)) {\n        return\n      }\n      // include the verified address\n      verifiedAddresses.push({\n        address: record.address,\n        message: record.proof.message,\n        signature: record.proof.signature,\n        symbol: record.symbol,\n      })\n    })\n\n    // return the verified address list\n    return verifiedAddresses\n  }\n\n  // getAuthorizationAccount retrieves the address that authorized the request\n  getAuthorizationAccount(\n    authorization: Authorization,\n    type = 'sig',\n    version = 'v1',\n  ): VerifiedAddress | undefined {\n    // find the requested proof key from AMR field\n    const sigProofKeys = authorization.idToken.amr?.filter((key: string) =>\n      key.startsWith(`${version}.${type}`),\n    )\n\n    // validate the proof key is located\n    if (!sigProofKeys || sigProofKeys.length == 0) {\n      return undefined\n    }\n\n    // extract the signature address\n    const sigAddress = sigProofKeys[0].split('.')[3]\n    const verifiedAccounts = this.getVerifiedAccounts(authorization)\n    if (!verifiedAccounts) {\n      return undefined\n    }\n\n    // find and return the proof address from verified account list\n    for (const account of verifiedAccounts) {\n      if (account.address === sigAddress) {\n        return account\n      }\n    }\n  }\n\n  async getOpenIdConfiguration(username?: string): Promise<any> {\n    if (this.cacheOptions.issuer) {\n      const openidConfiguration =\n        await this._clientStore.getOpenIdConfiguration(username ?? '')\n      if (openidConfiguration) {\n        return openidConfiguration\n      }\n    }\n\n    const openidConfiguration = username\n      ? await this.issuerResolver.resolve(username, this.fallbackIssuer)\n      : await fetch(\n          this.fallbackIssuer + '/.well-known/openid-configuration',\n        ).then(resp =>\n          resp.ok\n            ? resp.json()\n            : Promise.reject(new Error('bad openid-configuration response')),\n        )\n\n    await this._clientStore.setOpenIdConfiguration(\n      username ?? '',\n      openidConfiguration,\n      typeof this.cacheOptions.issuer === 'number'\n        ? this.cacheOptions.issuer\n        : 3600_000,\n    )\n\n    return openidConfiguration\n  }\n\n  async authorization(\n    options: AuthorizationOptions = {},\n  ): Promise<Authorization> {\n    return this._clientStore.getAuthorization(options)\n  }\n\n  async user(options: UserOptions = {}): Promise<UserInfo> {\n    const claims = options.claims ?? [\n      'name',\n      'given_name',\n      'family_name',\n      'middle_name',\n      'nickname',\n      'preferred_username',\n      'profile',\n      'picture',\n      'website',\n      'email',\n      'email_verified',\n      'gender',\n      'birthdate',\n      'zoneinfo',\n      'locale',\n      'phone_number',\n      'phone_number_verified',\n      'address',\n      'updated_at',\n      'wallet_address',\n      'wallet_type_hint',\n      'eip4361_message',\n      'eip4361_signature',\n      'humanity_check_id',\n    ]\n\n    const authorization = await this.authorization(options)\n\n    const userinfo: UserInfo = {\n      sub: authorization.idToken.sub,\n    }\n\n    // If we should only read from cache.\n    if (this.cacheOptions.userinfo) {\n      for (const claim of claims) {\n        if (authorization.idToken[claim]) {\n          userinfo[claim] = authorization.idToken[claim]\n        }\n      }\n\n      return userinfo\n    }\n\n    const openidConfiguration = await this.getOpenIdConfiguration(\n      authorization.idToken.sub,\n    )\n\n    const request: UserInfoRequest = {\n      client_id: this.fallbackLoginOptions.clientID,\n      client_secret: this.fallbackLoginOptions.clientSecret,\n      client_auth_method: this.fallbackLoginOptions.clientAuthMethod,\n      access_token: authorization.accessToken,\n      url: openidConfiguration.userinfo_endpoint,\n    }\n\n    const response = await this.api.userinfo(request)\n\n    for (const claim of claims) {\n      if (response[claim]) {\n        userinfo[claim] = response[claim]\n      }\n    }\n\n    return userinfo\n  }\n\n  async buildLogoutRequest(options: LogoutOptions): Promise<LogoutRequest> {\n    const authorization = await this.authorization(options)\n\n    const openidConfiguration = await this.getOpenIdConfiguration(\n      authorization.idToken.sub,\n    )\n\n    if (openidConfiguration.end_session_endpoint == null) {\n      throw new Error('end_session_endpoint must exist')\n    }\n\n    const postLogoutRedirectUri =\n      options.postLogoutRedirectUri ??\n      this.fallbackLogoutOptions.postLogoutRedirectUri\n\n    if (postLogoutRedirectUri == null) {\n      throw new Error('postLogoutRedirectUri must be supplied')\n    }\n\n    const request: LogoutRequest = {\n      client_id: this.fallbackLoginOptions.clientID,\n      client_secret: this.fallbackLoginOptions.clientSecret,\n      client_auth_method: this.fallbackLoginOptions.clientAuthMethod,\n      url: openidConfiguration.end_session_endpoint,\n      id_token_hint: authorization.idToken.__raw,\n      post_logout_redirect_uri: postLogoutRedirectUri,\n      state: util.encoding.encodeState(options.state),\n    }\n\n    await this._clientStore.setLogoutRequest(request)\n\n    return request\n  }\n\n  async logout({\n    clientID,\n    username,\n    scope,\n    resource,\n    ...options\n  }: Partial<LogoutOptions> = {}): Promise<void> {\n    const logoutOptions: LogoutOptions = {\n      ...this.fallbackLogoutOptions,\n      ...options,\n    }\n\n    const authorizationOptions = {clientID, username, scope, resource}\n\n    if (!logoutOptions.rpInitiatedLogout) {\n      await this._clientStore.deleteAuthorization(authorizationOptions)\n      return\n    }\n\n    const request = await this.buildLogoutRequest(logoutOptions)\n\n    const url = this.api.buildLogoutUrl(request)\n\n    if (typeof logoutOptions.beforeRedirect === 'function') {\n      await logoutOptions.beforeRedirect(url)\n    }\n\n    await this._clientStore.deleteAuthorization(authorizationOptions)\n\n    window.location.href = url\n  }\n\n  async logoutCallback<T>(options: LogoutCallbackOptions = {}): Promise<T> {\n    const url = options?.url ?? window.location.href\n\n    const request: LogoutRequest = await this._clientStore.getLogoutRequest()\n\n    const response: AuthorizeResponse =\n      this.api.parseAuthorizeResponseFromQuery(url)\n\n    await this.verifyLogoutResponse(request, response)\n\n    return util.encoding.decodeState<T>(request.state)\n  }\n\n  async verifyLogoutResponse(\n    request: LogoutRequest,\n    response: LogoutResponse,\n  ): Promise<void> {\n    if (request.state !== response.state) {\n      throw new Error(\"states don't match\")\n    }\n  }\n}\n","export const VERSION = \"2.4.0\";\n"],"names":["win","window","global","self","module","exports","DefaultIPFSResolver","defaultCreateUrl","createURL","this","cid","path","replace","resolve","uri","protocol","startsWith","substring","split","length","url","URL","hash","password","port","search","username","Error","hostname","pathname","fetch","then","r","resp","ok","text","Promise","reject","DefaultIssuerResolver","options","fallbackIssuer","domain","user","includes","_username$split","rel","webfingerResolver","jrd","link","_jrd$links","links","find","v","href","json","state","value","pact","observer","_Pact","prototype","onRejected","s","callback","onFulfilled","o","result","e","_settle","i","_this","_w","UAUTH_VERSION","COMMON","DefaultWebFingerResolver","webfingerKey","_this2","domainResolver","records","subject","resource","webfingerRecord","JSON","parse","host","URLSearchParams","toString","headers","Host","_fetch$then","n","t","p","_fetch$then2","ipfsResolver","_this$options$ipfsRes","_temp2","MemoryDomainResolver","isCryptoKey","key","CryptoKey","encoder","TextEncoder","decoder","TextDecoder","concat","buffers","size","reduce","acc","buf","Uint8Array","forEach","buffer","set","decode","input","encoded","binary","atob","bytes","charCodeAt","decodeBase64","_a","TypeError","JOSEError","message","code","name","constructor","captureStackTrace","call","JWTClaimValidationFailed","claim","reason","JWTExpired","JOSEAlgNotAllowed","arguments","JOSENotSupported","JWSInvalid","JWTInvalid","JWKSInvalid","JWKSNoMatchingKey","JWKSMultipleMatchingKeys","JWKSTimeout","JWSSignatureVerificationFailed","crypto","types","isCloudflareWorkers","WebSocketPair","navigator","userAgent","EdgeRuntime","subtleMapping","jwk","algorithm","keyUsages","kty","alg","slice","d","parseInt","namedCurve","crv","rest","ext","_b","key_ops","importKey","base64url","k","keyData","use","isObject","Object","getPrototypeOf","proto","importJWK","octAsKeyObject","asKeyObject","decodeBase64URL","undefined","oth","msg","actual","last","pop","join","withAlg","usage","test","isKeyLike","invalidKeyInput","type","symmetricTypeCheck","asymmetricTypeCheck","Err","recognizedDefault","recognizedOption","protectedHeader","joseHeader","crit","Set","Array","isArray","some","recognized","Map","entries","parameter","has","get","Symbol","subtleDsa","saltLength","modulusLength","unusable","prop","isAlgorithm","getHashLength","getNamedCurve","checkUsage","usages","expected","getCryptoKey","checkSigCryptoKey","verify","signature","data","getVerifyKey","cryptoKey","checkKeyLength","subtleAlgorithm","sources","filter","Boolean","header","parameters","keys","add","option","algorithms","flattenedVerify","jws","protected","payload","parsedProt","isDisjoint","extensions","validateCrit","b64","validateAlgorithms","resolvedKey","checkKeyType","unprotectedHeader","compactVerify","verified","date","Math","floor","getTime","day","hour","REGEX","str","matched","exec","parseFloat","toLowerCase","round","minute","normalizeTyp","checkAudiencePresence","audPayload","audOption","bind","encodedPayload","typ","issuer","iss","sub","tolerance","audience","aud","clockTolerance","secs","currentDate","now","epoch","Date","iat","maxTokenAge","nbf","exp","age","max","jwt","jwtPayload","getKtyFromAlg","isJWKSLike","jwks","every","isJWKLike","LocalJWKSet","_cached","WeakMap","obj","_jwks","structuredClone","stringify","token","kid","candidates","candidate","cached","keyObject","fetchJwks","timeout","timedOut","AbortController","controller","id","setTimeout","abort","signal","redirect","catch","err","response","clearTimeout","status","RemoteJWKSet","_url","_options","agent","_timeoutDuration","timeoutDuration","_cooldownDuration","cooldownDuration","_cacheMaxAge","cacheMaxAge","_jwksTimestamp","fresh","reload","coolingDown","_pendingFetch","isDone","createError","_class2","_inheritsLoose","PopupTimeoutError","PopupClosedError","stringFromBuffer","String","fromCharCode","apply","from","textEncoder","getWindow","toBase64","btoa","toUrlEncodedBase64","getCrypto","_getWindow$crypto","msCrypto","getRandomBytes","getRandomValues","getCryptoSubtle","subtle","_getCrypto$subtle","webkitSubtle","sha256","digestOp","digest","res","rej","oncomplete","target","onerror","error","onabort","pkceMask","fromBase64","textDecoder","uniqueElementsFromArray","arr","getSortedScope","scope","trim","sort","objectFromURLSearchParams","params","_","getAll","object","_ref","createCodeChallengeAndVerifier","method","verifier","map","challenge","encode","verifyIdToken","jwks_uri","id_token","nonce","client_id","jwtVerify","getKey","idToken","__raw","encoding","decodeState","_state$split","decodeURIComponent","encodeState","encodeURIComponent","objectFromEntries","_step","_step$value","retry","fn","retries","factor","ApiError","description","fromResponse","error_description","error_uri","_excluded","_excluded2","Api","buildAuthorizeUrl","request","_buildUrl","buildLogoutUrl","parseAuthorizeResponseFromFragment","_validateResponse","parseAuthorizeResponseFromQuery","searchParams","authorizeWithPopup","config","popup","_config$timeout","location","_config$height","width","_config$width","height","open","screenX","innerWidth","screenY","innerHeight","recievedMessage","timeoutId","clearInterval","intervalId","close","setInterval","redirectUrl","_popup","closed","redirect_uri","authorizeWithDevice","getToken","_buildRequest","_fetchJSON","_this4$_buildRequest","introspect","_this$_buildRequest","init","revoke","_this6$_buildRequest","userinfo","Authorization","access_token","_this$_buildRequest2","_this$_buildRequest3","getTokenWithAuthorizationCode","getTokenWithRefreshToken","getTokenWithDeviceCode","getTokenWithPassword","getTokenWithSAML","getTokenWithClientCredentials","_objectWithoutPropertiesLoose","urlObject","_i","_Object$entries$_i","append","client_secret","client_auth_method","headersInit","Headers","_this$options$headers","body","_this8","Accept","_window","statusText","ClientStore","client","mustExist","deleteAfter","getStore","entry","expiresAt","_exit","setAuthorizeRequest","getAuthorizeRequest","setLogoutRequest","getLogoutRequest","setVerifier","getVerifier","setOpenIdConfiguration","openidConfiguration","getOpenIdConfiguration","setAuthorization","authorization","authorizationOptions","clientID","expiresIn","_getAuthorizationKey","deleteAuthorization","fallbackUsername","_getUsername","_delete","_this15$client$getSto","_this15$_getAuthoriza","_this15$_getUsername","_this16","delete","_temp6","getAuthorization","_get2","_this18","util","_getUsername3","_this20","_this19$_getUsername","_options$clientID","fallbackLoginOptions","_options$resource","StorageStore","storage","getItem","_proto","removeItem","setItem","JS","Client","_clientStore","api","fallbackLogoutOptions","cacheOptions","issuerResolver","resolution","store","storeOptions","_options$fallbackIssu","_options$resolution","Resolution","storeType","_options$storeType","_options$cacheOptions","clientSecret","clientAuthMethod","_options$clientAuthMe","maxAge","_options$maxAge","prompt","_options$prompt","redirectUri","responseMode","_options$responseMode","_options$scope","rpInitiatedLogout","_options$rpInitiatedL","postLogoutRedirectUri","createIpfsUrl","_catch","ResolutionError","ResolutionErrorCode","localStorage","sessionStorage","buildAuthorizeRequest","loginOptions","_extends","loginHint","authorization_endpoint","code_challenge","flow_id","flowId","_loginOptions$flowId","login_hint","max_age","response_mode","code_challenge_method","response_type","package_name","packageName","package_version","packageVersion","loginWithPopup","_this4","verifyAuthorizeResponse","login","_this6","_temp","beforeRedirect","loginCallback","_options$url","_this7$verifyAuthoriz","_this10","_request$client_auth_","token_endpoint","_openidConfiguration$","_request$client_id","_request$client_secre","grant_type","_response$code","code_verifier","tokenResponse","accessToken","expires_in","getVerifiedAccounts","symbols","verifiedAddresses","verified_addresses","record","symbol","push","address","proof","getAuthorizationAccount","version","_authorization$idToke","sigProofKeys","amr","sigAddress","verifiedAccounts","account","_temp5","_this12","claims","_options$claims","_step2","userinfo_endpoint","_step3","buildLogoutRequest","end_session_endpoint","_options$postLogoutRe","id_token_hint","post_logout_redirect_uri","logout","_exit4","_temp12","logoutOptions","_temp7","_temp8","_temp13","logoutCallback","_this22","_options$url2","verifyLogoutResponse"],"sourceRoot":""}