{"version":3,"file":"static/js/1632.54aba340.chunk.js","mappings":"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","sources":["../node_modules/@web3-onboard/magic/node_modules/tslib/tslib.es6.js","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/isFunction.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/createErrorClass.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/arrRemove.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/Subscription.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/config.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/noop.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/NotificationFactories.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/errorContext.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/Subscriber.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/reportUnhandledError.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/symbol/observable.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/identity.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/pipe.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/Observable.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/Subject.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/observable/empty.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/lift.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/operators/take.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/util/EmptyError.ts","../node_modules/@web3-onboard/magic/node_modules/rxjs/src/internal/firstValueFrom.ts","../node_modules/@web3-onboard/magic/dist/login-modal-978933b3.js"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subcription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => number;\ntype ClearTimeoutFunction = (handle: number) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const {delegate} = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle);\n  },\n  delegate: undefined,\n};\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: observerOrNext ?? undefined,\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n","import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n","import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n","import { Subject, take, firstValueFrom } from 'rxjs';\nimport { v as validateUserEmail } from './index-455620ef.js';\nimport { SofiaProRegular, SofiaProLight } from '@web3-onboard/common';\nimport 'joi';\n\nfunction noop() { }\nconst identity = x => x;\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction fade(node, { delay = 0, duration = 400, easing = identity } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\n\nvar closeIcon = `\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M11.6569 1.75736L7.41429 6L11.6569 10.2426L10.2427 11.6569L6.00008 7.41421L1.75744 11.6569L0.343227 10.2426L4.58587 6L0.343227 1.75736L1.75744 0.343146L6.00008 4.58579L10.2427 0.343146L11.6569 1.75736Z\" fill=\"currentColor\"/>\n  </svg>\n`;\n\n/* src/elements/CloseButton.svelte generated by Svelte v3.50.1 */\n\nfunction add_css$2(target) {\n\tappend_styles(target, \"svelte-h7wb50\", \".close-button-container.svelte-h7wb50{cursor:pointer;display:flex;justify-content:center;align-items:center}.close-button.svelte-h7wb50{width:2rem;height:2rem;box-sizing:border-box;display:flex;justify-content:center;align-items:center;padding:0.4rem;border-radius:40px;color:var(--onboard-gray-400, var(--gray-400));background:var(--onboard-white, var(--white))}.close-icon.svelte-h7wb50{width:14px;display:flex;align-items:center}\");\n}\n\nfunction create_fragment$2(ctx) {\n\tlet div2;\n\tlet div1;\n\tlet div0;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv2 = element(\"div\");\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tattr(div0, \"class\", \"close-icon svelte-h7wb50\");\n\t\t\tattr(div1, \"class\", \"close-button svelte-h7wb50\");\n\t\t\tattr(div2, \"class\", \"close-button-container svelte-h7wb50\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div2, anchor);\n\t\t\tappend(div2, div1);\n\t\t\tappend(div1, div0);\n\t\t\tdiv0.innerHTML = closeIcon;\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div2);\n\t\t}\n\t};\n}\n\nclass CloseButton extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment$2, safe_not_equal, {}, add_css$2);\n\t}\n}\n\n/* src/elements/Spinner.svelte generated by Svelte v3.50.1 */\n\nfunction add_css$1(target) {\n\tappend_styles(target, \"svelte-febrzt\", \".loading-container.svelte-febrzt.svelte-febrzt{display:flex;flex-direction:column;align-items:center;justify-content:center;font-family:inherit;font-size:inherit;color:inherit;margin:auto}span.svelte-febrzt.svelte-febrzt{font-family:inherit;font-size:0.889em;margin-top:1rem}.loading.svelte-febrzt.svelte-febrzt{display:inline-block;position:relative}.loading.svelte-febrzt div.svelte-febrzt{box-sizing:border-box;font-size:inherit;display:block;position:absolute;border:3px solid;border-radius:50%;animation:svelte-febrzt-bn-loading 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;border-color:currentColor transparent transparent transparent}.loading.svelte-febrzt .loading-first.svelte-febrzt{animation-delay:-0.45s}.loading.svelte-febrzt .loading-second.svelte-febrzt{animation-delay:-0.3s}.loading.svelte-febrzt .loading-third.svelte-febrzt{animation-delay:-0.15s}@keyframes svelte-febrzt-bn-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\");\n}\n\n// (68:2) {#if description}\nfunction create_if_block$1(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*description*/ ctx[0]);\n\t\t\tattr(span, \"class\", \"svelte-febrzt\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*description*/ 1) set_data(t, /*description*/ ctx[0]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\nfunction create_fragment$1(ctx) {\n\tlet div4;\n\tlet div3;\n\tlet div0;\n\tlet div0_style_value;\n\tlet t0;\n\tlet div1;\n\tlet div1_style_value;\n\tlet t1;\n\tlet div2;\n\tlet div2_style_value;\n\tlet div3_style_value;\n\tlet t2;\n\tlet if_block = /*description*/ ctx[0] && create_if_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv4 = element(\"div\");\n\t\t\tdiv3 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt0 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tt1 = space();\n\t\t\tdiv2 = element(\"div\");\n\t\t\tt2 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div0, \"class\", \"loading-first svelte-febrzt\");\n\t\t\tattr(div0, \"style\", div0_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div1, \"class\", \"loading-second svelte-febrzt\");\n\t\t\tattr(div1, \"style\", div1_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div2, \"class\", \"loading-third svelte-febrzt\");\n\t\t\tattr(div2, \"style\", div2_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div3, \"class\", \"loading svelte-febrzt\");\n\t\t\tattr(div3, \"style\", div3_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div4, \"class\", \"loading-container svelte-febrzt\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div4, anchor);\n\t\t\tappend(div4, div3);\n\t\t\tappend(div3, div0);\n\t\t\tappend(div3, t0);\n\t\t\tappend(div3, div1);\n\t\t\tappend(div3, t1);\n\t\t\tappend(div3, div2);\n\t\t\tappend(div4, t2);\n\t\t\tif (if_block) if_block.m(div4, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*size*/ 2 && div0_style_value !== (div0_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div0, \"style\", div0_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div1_style_value !== (div1_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div1, \"style\", div1_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div2_style_value !== (div2_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div2, \"style\", div2_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div3_style_value !== (div3_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div3, \"style\", div3_style_value);\n\t\t\t}\n\n\t\t\tif (/*description*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$1(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div4, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div4);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\tlet { description = '' } = $$props;\n\tlet { size = '2rem' } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('description' in $$props) $$invalidate(0, description = $$props.description);\n\t\tif ('size' in $$props) $$invalidate(1, size = $$props.size);\n\t};\n\n\treturn [description, size];\n}\n\nclass Spinner extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, { description: 0, size: 1 }, add_css$1);\n\t}\n}\n\n/* src/view/LoginModal.svelte generated by Svelte v3.50.1 */\n\nfunction add_css(target) {\n\tappend_styles(target, \"svelte-1y81jlz\", \"input[type='text'].svelte-1y81jlz{display:block;margin:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;scrollbar-width:none;width:32rem;padding:0.5rem 2.6rem 0.5rem 1rem;border-radius:8px;font-size:var(\\n      --login-modal-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --login-modal-font-line-height-1,\\n      var(--font-line-height-1)\\n    );color:var(\\n      --login-modal-gray-500,\\n      var(--onboard-gray-500, var(--gray-500))\\n    );transition:all 200ms ease-in-out;border:2px solid\\n      var(--login-modal-gray-200, var(--onboard-gray-200, var(--gray-200)));box-sizing:border-box;height:3rem;-ms-overflow-style:none}.close-action-container.svelte-1y81jlz{position:absolute;right:0;padding:0.5rem 0.75rem}button.svelte-1y81jlz{align-items:center;padding:0.75rem 1.5rem;color:var(--login-modal-white, var(--onboard-white, var(--white)));border-radius:1.5rem;font-family:var(\\n      --login-modal-font-family-normal,\\n      var(--font-family-normal)\\n    );font-style:normal;font-weight:bold;font-size:var(\\n      --login-modal-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --login-modal-font-line-height-1,\\n      var(--onboard-line-height-1, var(--line-height-1))\\n    );border:none}.login-btn.svelte-1y81jlz:disabled{background:var(\\n      --login-modal-primary-300,\\n      var(--onboard-primary-300, var(--primary-300))\\n    );cursor:default}.login-btn.svelte-1y81jlz{background:var(\\n      --login-modal-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );cursor:pointer;display:inline-flex;justify-content:space-around;width:6rem}.close.svelte-1y81jlz{cursor:pointer}.form-element.svelte-1y81jlz{margin:1rem 0}.container.svelte-1y81jlz{font-family:var(\\n      --login-modal-font-family-normal,\\n      var(--onboard-font-family-normal, var(--font-family-normal))\\n    );color:var(--login-modal-black, var(--onboard-black, var(--black)));top:0;right:0;z-index:var(--onboard-login-modal-z-index, var(--login-modal-z-index));position:absolute;display:flex;align-items:center;justify-content:center;width:100vw;height:100vh;backdrop-filter:blur(4px);background:rgba(0, 0, 0, 0.2)}.onboard-magic-login-modal.svelte-1y81jlz{min-width:36rem;max-height:51.75rem;display:table;background:var(--login-modal-white, var(--onboard-white, var(--white)));box-shadow:var(\\n      --login-modal-shadow-1,\\n      var(--onboard-shadow-1, var(--shadow-1))\\n    );border-radius:1.5rem;text-align:center;background:var(\\n      --login-modal-white,\\n      var(--onboard-white, var(--white))\\n    );color:var(--login-modal-black, var(--onboard-black, var(--black)))}.login-modal-position.svelte-1y81jlz{position:absolute;top:var(--onboard-login-modal-top, var(--login-modal-top));bottom:var(--onboard-login-modal-bottom, var(--login-modal-bottom));left:var(--onboard-login-modal-left, var(--login-modal-left));right:var(--onboard-login-modal-right, var(--login-modal-right))}.modal-controls.svelte-1y81jlz{display:flex;justify-content:space-between;align-items:center;padding:1rem;padding-top:0;flex-direction:column}.branding.svelte-1y81jlz{margin:var(\\n      --login-modal-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    );display:flex;align-items:center;justify-content:center}.error-msg.svelte-1y81jlz{color:var(\\n      --login-modal-danger-500,\\n      var(--onboard-danger-500, var(--danger-500))\\n    );font-family:var(\\n      --login-modal-font-family-light,\\n      var(--onboard-font-family-light, var(--font-family-light))\\n    )}@media all and (max-width: 520px){.onboard-magic-login-modal.svelte-1y81jlz{min-width:22rem;width:98vw}input[type='text'].svelte-1y81jlz{width:21rem}}\");\n}\n\n// (228:6) {#if errorInEmail}\nfunction create_if_block_1(ctx) {\n\tlet span;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tspan.textContent = \"Please enter a valid email address\";\n\t\t\tattr(span, \"class\", \"error-msg svelte-1y81jlz\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\n// (240:8) {:else}\nfunction create_else_block(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(\"Login\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t);\n\t\t}\n\t};\n}\n\n// (238:8) {#if loading}\nfunction create_if_block(ctx) {\n\tlet spinner;\n\tlet current;\n\tspinner = new Spinner({ props: { size: \"1.5rem\" } });\n\n\treturn {\n\t\tc() {\n\t\t\tcreate_component(spinner.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tmount_component(spinner, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(spinner.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(spinner.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_component(spinner, detaching);\n\t\t}\n\t};\n}\n\nfunction create_fragment(ctx) {\n\tlet div3;\n\tlet div2;\n\tlet div0;\n\tlet closebutton;\n\tlet t0;\n\tlet h2;\n\tlet t3;\n\tlet section;\n\tlet input;\n\tlet t4;\n\tlet t5;\n\tlet button;\n\tlet current_block_type_index;\n\tlet if_block1;\n\tlet button_disabled_value;\n\tlet t6;\n\tlet div1;\n\tlet div2_transition;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tclosebutton = new CloseButton({});\n\tlet if_block0 = /*errorInEmail*/ ctx[1] && create_if_block_1();\n\tconst if_block_creators = [create_if_block, create_else_block];\n\tconst if_blocks = [];\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*loading*/ ctx[2]) return 0;\n\t\treturn 1;\n\t}\n\n\tcurrent_block_type_index = select_block_type(ctx);\n\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv3 = element(\"div\");\n\t\t\tdiv2 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tcreate_component(closebutton.$$.fragment);\n\t\t\tt0 = space();\n\t\t\th2 = element(\"h2\");\n\t\t\th2.textContent = `${/*walletName*/ ctx[3]} Login`;\n\t\t\tt3 = space();\n\t\t\tsection = element(\"section\");\n\t\t\tinput = element(\"input\");\n\t\t\tt4 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt5 = space();\n\t\t\tbutton = element(\"button\");\n\t\t\tif_block1.c();\n\t\t\tt6 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tattr(div0, \"class\", \"close-action-container close svelte-1y81jlz\");\n\t\t\tattr(input, \"type\", \"text\");\n\t\t\tattr(input, \"class\", \"login-credentials form-element svelte-1y81jlz\");\n\t\t\tattr(input, \"placeholder\", \"Email address\");\n\t\t\tattr(button, \"class\", \"login-btn form-element svelte-1y81jlz\");\n\t\t\tattr(button, \"id\", \"connect-accounts\");\n\t\t\tbutton.disabled = button_disabled_value = !/*credentials*/ ctx[0];\n\t\t\tattr(section, \"class\", \"modal-controls svelte-1y81jlz\");\n\t\t\tattr(div1, \"class\", \"branding svelte-1y81jlz\");\n\t\t\tattr(div2, \"class\", \"onboard-magic-login-modal login-modal-position svelte-1y81jlz\");\n\t\t\tattr(div3, \"class\", \"container svelte-1y81jlz\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div3, anchor);\n\t\t\tappend(div3, div2);\n\t\t\tappend(div2, div0);\n\t\t\tmount_component(closebutton, div0, null);\n\t\t\tappend(div2, t0);\n\t\t\tappend(div2, h2);\n\t\t\tappend(div2, t3);\n\t\t\tappend(div2, section);\n\t\t\tappend(section, input);\n\t\t\tset_input_value(input, /*credentials*/ ctx[0]);\n\t\t\tappend(section, t4);\n\t\t\tif (if_block0) if_block0.m(section, null);\n\t\t\tappend(section, t5);\n\t\t\tappend(section, button);\n\t\t\tif_blocks[current_block_type_index].m(button, null);\n\t\t\tappend(div2, t6);\n\t\t\tappend(div2, div1);\n\t\t\tdiv1.innerHTML = /*brandingHTMLString*/ ctx[4];\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(div0, \"click\", /*dismiss*/ ctx[7]),\n\t\t\t\t\tlisten(input, \"input\", /*input_input_handler*/ ctx[11]),\n\t\t\t\t\tlisten(input, \"input\", /*input_handler*/ ctx[12]),\n\t\t\t\t\tlisten(input, \"keydown\", /*submitOnEnter*/ ctx[8]),\n\t\t\t\t\tlisten(button, \"click\", /*click_handler*/ ctx[13])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*credentials*/ 1 && input.value !== /*credentials*/ ctx[0]) {\n\t\t\t\tset_input_value(input, /*credentials*/ ctx[0]);\n\t\t\t}\n\n\t\t\tif (/*errorInEmail*/ ctx[1]) {\n\t\t\t\tif (if_block0) ; else {\n\t\t\t\t\tif_block0 = create_if_block_1();\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(section, t5);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tif_block0.d(1);\n\t\t\t\tif_block0 = null;\n\t\t\t}\n\n\t\t\tlet previous_block_index = current_block_type_index;\n\t\t\tcurrent_block_type_index = select_block_type(ctx);\n\n\t\t\tif (current_block_type_index !== previous_block_index) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_blocks[previous_block_index], 1, 1, () => {\n\t\t\t\t\tif_blocks[previous_block_index] = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t\tif_block1 = if_blocks[current_block_type_index];\n\n\t\t\t\tif (!if_block1) {\n\t\t\t\t\tif_block1 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t}\n\n\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\tif_block1.m(button, null);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*credentials*/ 1 && button_disabled_value !== (button_disabled_value = !/*credentials*/ ctx[0])) {\n\t\t\t\tbutton.disabled = button_disabled_value;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(closebutton.$$.fragment, local);\n\t\t\ttransition_in(if_block1);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, {}, true);\n\t\t\t\tdiv2_transition.run(1);\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(closebutton.$$.fragment, local);\n\t\t\ttransition_out(if_block1);\n\t\t\tif (!div2_transition) div2_transition = create_bidirectional_transition(div2, fade, {}, false);\n\t\t\tdiv2_transition.run(0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div3);\n\t\t\tdestroy_component(closebutton);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif_blocks[current_block_type_index].d();\n\t\t\tif (detaching && div2_transition) div2_transition.end();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet credentials = '';\n\tlet { loginOptions } = $$props;\n\tlet { loggedIn$ } = $$props;\n\tconst { walletName, brandingHTMLString, emailLoginFunction } = loginOptions;\n\tlet errorInEmail = false;\n\tlet loading = false;\n\n\tconst setErrorInEmail = () => {\n\t\tif (!errorInEmail) return;\n\t\t$$invalidate(1, errorInEmail = false);\n\t};\n\n\tconst validateEmail = value => {\n\t\treturn validateUserEmail(value);\n\t};\n\n\tconst login = async () => {\n\t\t$$invalidate(2, loading = true);\n\n\t\tif (validateEmail(credentials)) {\n\t\t\t$$invalidate(1, errorInEmail = true);\n\t\t\t$$invalidate(2, loading = false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst loginResponse = await emailLoginFunction(credentials);\n\t\t$$invalidate(2, loading = false);\n\t\tloggedIn$.next(loginResponse);\n\t};\n\n\tconst dismiss = () => {\n\t\tloggedIn$.next(false);\n\t\t$$invalidate(2, loading = false);\n\t};\n\n\tconst submitOnEnter = e => {\n\t\tif (e.key === 'Enter') {\n\t\t\tlogin();\n\t\t}\n\t};\n\n\tfunction input_input_handler() {\n\t\tcredentials = this.value;\n\t\t$$invalidate(0, credentials);\n\t}\n\n\tconst input_handler = () => setErrorInEmail();\n\tconst click_handler = () => login();\n\n\t$$self.$$set = $$props => {\n\t\tif ('loginOptions' in $$props) $$invalidate(9, loginOptions = $$props.loginOptions);\n\t\tif ('loggedIn$' in $$props) $$invalidate(10, loggedIn$ = $$props.loggedIn$);\n\t};\n\n\treturn [\n\t\tcredentials,\n\t\terrorInEmail,\n\t\tloading,\n\t\twalletName,\n\t\tbrandingHTMLString,\n\t\tsetErrorInEmail,\n\t\tlogin,\n\t\tdismiss,\n\t\tsubmitOnEnter,\n\t\tloginOptions,\n\t\tloggedIn$,\n\t\tinput_input_handler,\n\t\tinput_handler,\n\t\tclick_handler\n\t];\n}\n\nclass LoginModal extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance, create_fragment, safe_not_equal, { loginOptions: 9, loggedIn$: 10 }, add_css);\n\t}\n}\n\nconst loggedIn$ = new Subject();\n\n// eslint-disable-next-line max-len\nconst loginModal = async (options) => {\n    if (options) {\n        const error = !options;\n        if (error) {\n            throw error;\n        }\n    }\n    const app = mountLoginModal(options, loggedIn$);\n    loggedIn$.pipe(take(1)).subscribe(() => {\n        app.$destroy();\n        const modalEl = document.body.querySelector('onboard-magic-login-modal');\n        modalEl && document.body.removeChild(modalEl);\n    });\n    return firstValueFrom(loggedIn$);\n};\n// eslint-disable-next-line max-len\nconst mountLoginModal = (loginOptions, loggedIn$) => {\n    class loginModalEl extends HTMLElement {\n        constructor() {\n            super();\n        }\n    }\n    if (!customElements.get('onboard-magic-login-modal')) {\n        customElements.define('onboard-magic-login-modal', loginModalEl);\n    }\n    // Add Fonts to main page\n    const styleEl = document.createElement('style');\n    styleEl.innerHTML = `\n    ${SofiaProRegular}\n    ${SofiaProLight}\n  `;\n    document.body.appendChild(styleEl);\n    // add to DOM\n    const loginModalDomElement = document.createElement('onboard-magic-login-modal');\n    const target = loginModalDomElement.attachShadow({ mode: 'open' });\n    loginModalDomElement.style.all = 'initial';\n    target.innerHTML = `\n    <style>\n      :host {  \n        /* COLORS */\n        --white: white;\n        --black: black;\n        --primary-300: #b1b8f2;\n        --primary-500: #6370e5;\n        --gray-200: #c2c4c9;\n        --gray-500: #33394b;\n        --danger-500: #ff4f4f;\n\n        /* FONTS */\n        --font-family-normal: Sofia Pro;\n        --font-family-light: Sofia Pro Light;\n        --font-size-5: 1rem;\n        --font-line-height-1: 24px;\n\n        /* SPACING */\n        --margin-4: 1rem;\n        --margin-5: 0.5rem;\n\n        /* MODAL POSITION */\n        --login-modal-z-index: 25;\n        --login-modal-top: unset;\n        --login-modal-right: unset;\n        --login-modal-bottom: unset;\n        --login-modal-left: unset;\n      }\n\n    </style>\n  `;\n    document.body.appendChild(loginModalDomElement);\n    const app = new LoginModal({\n        target: target,\n        props: {\n            loginOptions,\n            loggedIn$\n        }\n    });\n    return app;\n};\n\nexport { loginModal as default };\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__values","o","s","Symbol","iterator","m","i","length","next","value","done","__read","n","r","e","ar","push","error","__spreadArray","to","from","pack","arguments","l","slice","concat","isFunction","createErrorClass","createImpl","ctorFunc","instance","Error","stack","UnsubscriptionError","_super","errors","message","map","err","toString","join","name","arrRemove","arr","item","index","indexOf","splice","initialTeardown","closed","_parentage","_finalizers","Subscription","isArray","remove","initialFinalizer","finalizer","execFinalizer","teardown","_hasParent","_addParent","parent","includes","_removeParent","empty","EMPTY_SUBSCRIPTION","EMPTY","isSubscription","add","unsubscribe","config","onUnhandledError","onStoppedNotification","Promise","undefined","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","setTimeout","handler","timeout","_i","args","delegate","clearTimeout","handle","noop","COMPLETE_NOTIFICATION","createNotification","kind","context","errorContext","cb","isRoot","errorThrown","destination","_this","EMPTY_OBSERVER","Subscriber","complete","SafeSubscriber","isStopped","handleStoppedNotification","nextNotification","_next","_error","_complete","_bind","Function","bind","fn","thisArg","partialObserver","ConsumerObserver","handleUnhandledError","observerOrNext","context_1","reportUnhandledError","notification","subscriber","observable","identity","x","pipeFromArray","fns","input","reduce","prev","subscribe","_subscribe","Observable","operator","source","isObserver","_trySubscribe","sink","promiseCtor","getPromiseCtor","resolve","reject","Symbol_observable","operations","ObjectUnsubscribedError","Subject","subject","AnonymousSubject","_throwIfClosed","currentObservers","observers","hasError","thrownError","shift","_checkFinalizedStatuses","_innerSubscribe","operate","init","lift","hasLift","liftedSource","onNext","onComplete","onError","onFinalize","shouldUnsubscribe","OperatorSubscriber","closed_1","take","count","seen","EmptyError","firstValueFrom","hasConfig","defaultValue","run","blank_object","run_all","forEach","is_function","thing","safe_not_equal","a","is_client","window","now","performance","Date","raf","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","append_styles","style_sheet_id","styles","append_styles_to","get_root_for_style","getElementById","style","element","id","textContent","append_stylesheet","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","sheet","head","insert","anchor","insertBefore","detach","parentNode","removeChild","createElement","text","data","createTextNode","space","listen","event","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","children","childNodes","set_input_value","current_component","managed_styles","Map","active","hash","str","charCodeAt","create_style_information","doc","info","stylesheet","rules","set","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","get","insertRule","cssRules","animation","delete_rule","previous","split","filter","anim","deleted","ownerNode","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","add_render_callback","promise","seen_callbacks","flushidx","flush","saved_component","update","$$","pop","callback","has","fragment","before_update","dirty","ctx","after_update","dispatch","direction","dispatchEvent","type","detail","bubbles","cancelable","createEvent","initCustomEvent","custom_event","outros","outroing","transition_in","block","local","transition_out","null_transition","create_bidirectional_transition","params","intro","running_program","pending_program","animation_name","clear_animation","program","Math","abs","start","end","group","go","easing","tick","css","fulfill","loop","then","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","destroy_component","detaching","make_dirty","fill","create_fragment","not_equal","props","parent_component","bound","on_disconnect","callbacks","skip_bound","ready","ret","hydrate","nodes","SvelteComponent","$destroy","$$props","obj","$$set","keys","fade","getComputedStyle","opacity","add_css$2","create_fragment$2","div2","div1","div0","innerHTML","CloseButton","add_css$1","create_if_block$1","span","wholeText","create_fragment$1","div4","div3","div0_style_value","t0","div1_style_value","t1","div2_style_value","div3_style_value","t2","if_block","instance$1","$$self","$$invalidate","description","Spinner","add_css","create_if_block_1","create_else_block","create_if_block","spinner","current","closebutton","h2","t3","section","t4","t5","button","current_block_type_index","if_block1","button_disabled_value","t6","div2_transition","mounted","dispose","if_block0","if_block_creators","if_blocks","select_block_type","disabled","previous_block_index","credentials","loginOptions","loggedIn$","walletName","brandingHTMLString","emailLoginFunction","errorInEmail","loading","setErrorInEmail","login","validateUserEmail","loginResponse","key","LoginModal","loginModal","app","mountLoginModal","pipe","modalEl","body","querySelector","loginModalEl","HTMLElement","customElements","define","styleEl","SofiaProRegular","SofiaProLight","loginModalDomElement","attachShadow","mode","all"],"sourceRoot":""}