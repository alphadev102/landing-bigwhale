{"version":3,"file":"static/js/8738.c5af997e.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/@ethersproject/networks/src.ts/index.ts","../node_modules/@ethersproject/networks/src.ts/_version.ts","../node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/decoder.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/lib.ts","../node_modules/@ethersproject/hash/src.ts/ens-normalize/include.ts","../node_modules/@ethersproject/hash/src.ts/namehash.ts","../node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../node_modules/@ethersproject/web/src.ts/index.ts","../node_modules/@ethersproject/web/src.ts/_version.ts","../node_modules/@ethersproject/providers/src.ts/_version.ts","../node_modules/@ethersproject/providers/src.ts/formatter.ts","../node_modules/@ethersproject/constants/src.ts/addresses.ts","../node_modules/@ethersproject/providers/src.ts/base-provider.ts","../node_modules/@ethersproject/constants/src.ts/hashes.ts","../node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../node_modules/@ethersproject/providers/src.ts/ankr-provider.ts","../node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../node_modules/@ethersproject/random/src.ts/shuffle.ts","../node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../node_modules/@ethersproject/providers/src.ts/index.ts","../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/@ethersproject/sha2/src.ts/types.ts","../node_modules/node_modules/minimalistic-assert/index.js","../node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/node_modules/inherits/inherits_browser.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/@ethersproject/transactions/src.ts/_version.ts"],"sourcesContent":["/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    lastBaseFeePerGas: null | BigNumber;\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            lastBaseFeePerGas = block.baseFeePerGas;\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\" ];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                const skip = [ \"ropsten\" ];\n                const provider = new providers.AnkrProvider(network, options.ankr);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: {\n        chainId: 137,\n        name: \"matic\",\n        _defaultProvider: ethDefaultProvider(\"matic\")\n    },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: {\n        chainId: 10,\n        name: \"optimism\",\n        _defaultProvider: ethDefaultProvider(\"optimism\")\n    },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    \"arbitrum-goerli\": { chainId: 421613, name: \"arbitrum-goerli\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.7.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","export const version = \"hash/5.7.0\";\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nexport type Numbers = Uint8Array | Array<number>;\nexport type NextFunc = (...args: Array<any>) => number;\n\n// https://github.com/behnammodi/polyfill/blob/master/array.polyfill.js\nfunction flat(array: Array<any>, depth?: number): Array<any> {\n    if (depth == null) { depth = 1; }\n    const result: Array<any> = [];\n\n    const forEach = result.forEach;\n\n    const flatDeep = function (arr: Array<any>, depth: number) {\n        forEach.call(arr, function (val: any) {\n            if (depth > 0 && Array.isArray(val)) {\n                flatDeep(val, depth - 1);\n            } else {\n               result.push(val);\n            }\n        });\n    };\n\n    flatDeep(array, depth);\n    return result;\n}\n\nfunction fromEntries<T extends string | number | symbol = string | number | symbol, U = any>(array: Array<[T, U]>): Record<T, U> {\n    const result: Record<T, U> = <Record<T, U>>{ };\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        result[value[0]] = value[1];\n    }\n    return result;\n}\n\nexport function decode_arithmetic(bytes: Numbers): Array<number> {\n\tlet pos = 0;\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\n\t\n\t// decode the frequency table\n\tlet symbol_count = u16();\n\tlet total = 1;\n\tlet acc = [0, 1]; // first symbol has frequency 1\n\tfor (let i = 1; i < symbol_count; i++) {\n\t\tacc.push(total += u16());\n\t}\n\n\t// skip the sized-payload that the last 3 symbols index into\n\tlet skip = u16();\n\tlet pos_payload = pos;\n\tpos += skip;\n\n\tlet read_width = 0;\n\tlet read_buffer = 0; \n\tfunction read_bit() {\n\t\tif (read_width == 0) {\n\t\t\t// this will read beyond end of buffer\n\t\t\t// but (undefined|0) => zero pad\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\n\t\t\tread_width = 8;\n\t\t}\n\t\treturn (read_buffer >> --read_width) & 1;\n\t}\n\n\tconst N = 31;\n\tconst FULL = 2**N;\n\tconst HALF = FULL >>> 1;\n\tconst QRTR = HALF >> 1;\n\tconst MASK = FULL - 1;\n\n\t// fill register\n\tlet register = 0;\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\n\n\tlet symbols = [];\n\tlet low = 0;\n\tlet range = FULL; // treat like a float\n\twhile (true) {\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\n\t\tlet start = 0;\n\t\tlet end = symbol_count;\n\t\twhile (end - start > 1) { // binary search\n\t\t\tlet mid = (start + end) >>> 1;\n\t\t\tif (value < acc[mid]) {\n\t\t\t\tend = mid;\n\t\t\t} else {\n\t\t\t\tstart = mid;\n\t\t\t}\n\t\t}\n\t\tif (start == 0) break; // first symbol is end mark\n\t\tsymbols.push(start);\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1\n\t\twhile (((a ^ b) & HALF) == 0) {\n\t\t\tregister = (register << 1) & MASK | read_bit();\n\t\t\ta = (a << 1) & MASK;\n\t\t\tb = (b << 1) & MASK | 1;\n\t\t}\n\t\twhile (a & ~b & QRTR) {\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\n\t\t\ta = (a << 1) ^ HALF;\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\n\t\t}\n\t\tlow = a;\n\t\trange = 1 + b - a;\n\t}\n\tlet offset = symbol_count - 4;\n\treturn symbols.map(x => { // index into payload\n\t\tswitch (x - offset) {\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\n\t\t\tcase 1: return offset + bytes[pos_payload++];\n\t\t\tdefault: return x - 1;\n\t\t}\n\t});\n}\t\n\n\n// returns an iterator which returns the next symbol\nexport function read_payload(v: Numbers): NextFunc {\n\tlet pos = 0;\n\treturn () => v[pos++];\n}\nexport function read_compressed_payload(bytes: Numbers): NextFunc {\n\treturn read_payload(decode_arithmetic(bytes));\n}\n\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\nexport function signed(i: number): number { \n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\n}\n\nfunction read_counts(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0; i < n; i++) v[i] = 1 + next();\n\treturn v;\n}\n\nfunction read_ascending(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = -1; i < n; i++) v[i] = x += 1 + next();\n\treturn v;\n}\n\nfunction read_deltas(n: number, next: NextFunc): Array<number> {\n\tlet v = Array(n);\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\n\treturn v;\n}\n\nexport function read_member_array(next: NextFunc, lookup?: Record<number, number>) {\n    let v = read_ascending(next(), next);\n    let n = next();\n    let vX = read_ascending(n, next);\n    let vN = read_counts(n, next);\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < vN[i]; j++) {\n            v.push(vX[i] + j);\n        }\n    }\n    return lookup ? v.map(x => lookup[x]) : v;\n}\n\n// returns array of \n// [x, ys] => single replacement rule\n// [x, ys, n, dx, dx] => linear map\nexport function read_mapped_map(next: NextFunc): Record<number, Array<number>> {\n\tlet ret = [];\n\twhile (true) {\n\t\tlet w = next();\n\t\tif (w == 0) break;\n\t\tret.push(read_linear_table(w, next));\n\t}\n\twhile (true) {\n\t\tlet w = next() - 1;\n\t\tif (w < 0) break;\n\t\tret.push(read_replacement_table(w, next));\n\t}\n\treturn fromEntries<number, Array<number>>(flat(ret));\n}\n\nexport function read_zero_terminated_array(next: NextFunc): Array<number> {\n\tlet v = [];\n\twhile (true) {\n\t\tlet i = next();\n\t\tif (i == 0) break;\n\t\tv.push(i);\n\t}\n\treturn v;\n}\n\nfunction read_transposed(n: number, w: number, next: NextFunc): Array<Array<number>> {\n    let m = Array(n).fill(undefined).map(() => []);\n    for (let i = 0; i < w; i++) {\n        read_deltas(n, next).forEach((x, j) => m[j].push(x));\n    }\n    return m;\n}\n\n\nfunction read_linear_table(w: number, next: NextFunc): Array<Array<number | Array<number>>> {\n\tlet dx = 1 + next();\n\tlet dy = next();\n\tlet vN = read_zero_terminated_array(next);\n\tlet m = read_transposed(vN.length, 1+w, next);\n\treturn flat(m.map((v, i) => {\n\t  const x = v[0], ys = v.slice(1);\n\t\t//let [x, ...ys] = v;\n\t\t//return Array(vN[i]).fill().map((_, j) => {\n\t\treturn Array(vN[i]).fill(undefined).map((_, j) => {\n\t\t\tlet j_dy = j * dy;\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\n\t\t});\n\t}));\n}\n\nfunction read_replacement_table(w: number, next: NextFunc): Array<[ number, Array<number> ]> {\n\tlet n = 1 + next();\n\tlet m = read_transposed(n, 1+w, next);\n\treturn m.map(v => [v[0], v.slice(1)]);\n}\n\nexport type Branch = {\n    set: Set<number>;\n    node: Node;\n};\n\nexport type Node = {\n    branches: Array<Branch>;\n    valid: number;\n    fe0f: boolean;\n    save: boolean;\n    check: boolean;\n};\n\nexport function read_emoji_trie(next: NextFunc): Node {\n\tlet sorted = read_member_array(next).sort((a, b) => a - b);\n\treturn read();\n\tfunction read(): Node {\n\t\tlet branches = [];\n\t\twhile (true) {\n\t\t\tlet keys = read_member_array(next, sorted);\n\t\t\tif (keys.length == 0) break;\n\t\t\tbranches.push({set: new Set(keys), node: read()});\n\t\t}\n    branches.sort((a, b) => b.set.size - a.set.size); // sort by likelihood\n \t\tlet temp = next();\n \t\tlet valid = temp % 3;\n \t\ttemp = (temp / 3)|0;\n \t\tlet fe0f = !!(temp & 1);\n \t\ttemp >>= 1;\n \t\tlet save = temp == 1;\n \t\tlet check = temp == 2;\n \t\treturn {branches, valid, fe0f, save, check};\n\t}\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { toUtf8CodePoints } from \"@ethersproject/strings\";\n\nimport { getData } from './include.js';\nconst r = getData();\n\nimport {read_member_array, read_mapped_map, read_emoji_trie} from './decoder.js';\n\n// @TODO: This should be lazily loaded\n\nconst VALID = new Set(read_member_array(r));\nconst IGNORED = new Set(read_member_array(r));\nconst MAPPED = read_mapped_map(r);\nconst EMOJI_ROOT = read_emoji_trie(r);\n//const NFC_CHECK = new Set(read_member_array(r, Array.from(VALID.values()).sort((a, b) => a - b)));\n\n//const STOP = 0x2E;\nconst HYPHEN = 0x2D;\nconst UNDERSCORE = 0x5F;\n\nfunction explode_cp(name: string): Array<number> {\n    return toUtf8CodePoints(name);\n}\n\nfunction filter_fe0f(cps: Array<number>): Array<number> {\n    return cps.filter(cp => cp != 0xFE0F);\n}\n\nexport function ens_normalize_post_check(name: string): string {\n\tfor (let label of name.split('.')) {\n\t\tlet cps = explode_cp(label);\n\t\ttry {\n\t\t\tfor (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {\n\t\t\t\tif (cps[i] !== UNDERSCORE) {\n\t\t\t\t\tthrow new Error(`underscore only allowed at start`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cps.length >= 4 && cps.every(cp => cp < 0x80) && cps[2] === HYPHEN && cps[3] === HYPHEN) {\n\t\t\t\tthrow new Error(`invalid label extension`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Invalid label \"${label}\": ${err.message}`);\n\t\t}\n\t}\n\treturn name;\n}\n\nexport function ens_normalize(name: string): string {\n\treturn ens_normalize_post_check(normalize(name, filter_fe0f));\n}\n\nfunction normalize(name: string, emoji_filter: (a: Array<number>) => Array<number>): string {\n\tlet input = explode_cp(name).reverse(); // flip for pop\n\tlet output = [];\n\twhile (input.length) {\t\t\n\t\tlet emoji = consume_emoji_reversed(input);\n\t\tif (emoji) {\n\t\t\toutput.push(...emoji_filter(emoji));\n\t\t\tcontinue;\n\t\t}\n\t\tlet cp = input.pop();\n\t\tif (VALID.has(cp)) {\n\t\t\toutput.push(cp);\n\t\t\tcontinue;\n\t\t} \n\t\tif (IGNORED.has(cp)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet cps = MAPPED[cp];\n\t\tif (cps) {\n\t\t\toutput.push(...cps);\n\t\t\tcontinue;\n\t\t}\n\t\tthrow new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);\n\t}\n\treturn ens_normalize_post_check(nfc(String.fromCodePoint(...output)));\n}\n\nfunction nfc(s: string): string {\n    return s.normalize('NFC');\n}\n\nfunction consume_emoji_reversed(cps: Array<number>, eaten?: Array<number>) {\n\tlet node = EMOJI_ROOT;\n\tlet emoji;\n\tlet saved;\n\tlet stack = [];\n\tlet pos = cps.length;\n\tif (eaten) eaten.length = 0; // clear input buffer (if needed)\n\twhile (pos) {\n\t\tlet cp = cps[--pos];\n\t\tnode = node.branches.find(x => x.set.has(cp))?.node;\n\t\tif (!node) break;\n\t\tif (node.save) { // remember\n\t\t\tsaved = cp;\n\t\t} else if (node.check) { // check exclusion\n\t\t\tif (cp === saved) break;\n\t\t}\n\t\tstack.push(cp);\n\t\tif (node.fe0f) {\n\t\t\tstack.push(0xFE0F);\n\t\t\tif (pos > 0 && cps[pos - 1] == 0xFE0F) pos--; // consume optional FE0F\n\t\t}\n\t\tif (node.valid) { // this is a valid emoji (so far)\n\t\t\temoji = stack.slice(); // copy stack\n\t\t\tif (node.valid == 2) emoji.splice(1, 1); // delete FE0F at position 1 (RGI ZWJ don't follow spec!)\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // copy input (if needed)\n\t\t\tcps.length = pos; // truncate\n\t\t}\n\t}\n\treturn emoji;\n}\n","/**\n * MIT License\n *\n * Copyright (c) 2021 Andrew Raffensperger\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * This is a near carbon-copy of the original source (link below) with the\n * TypeScript typings added and a few tweaks to make it ES3-compatible.\n *\n * See: https://github.com/adraffy/ens-normalize.js\n */\n\nimport { decode } from \"@ethersproject/base64\";\n\nimport {read_compressed_payload} from './decoder.js';\n\nexport function getData(): () => number {\n    return read_compressed_payload(decode('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'));\n}\n\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { ens_normalize } from \"./ens-normalize/lib\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    if (comp.length === 0) { throw new Error(\"invalid ENS name; empty component\"); }\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ens_normalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    if (last >= bytes.length) { throw new Error(\"invalid ENS name; empty component\"); }\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\nexport function ensNormalize(name: string): string {\n    return ensNameSplit(name).map((comp) => toUtf8String(comp)).join(\".\");\n}\n\nexport function isValidName(name: string): boolean {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([result, keccak256(comps.pop())]));\n    }\n\n    return hexlify(result);\n}\n\nexport function dnsEncode(name: string): string {\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        // DNS does not allow components over 63 bytes in length\n        if (comp.length > 63) {\n            throw new Error(\"invalid DNS encoded entry; length exceeds 63 bytes\");\n        }\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n\n    }))) + \"00\";\n}\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    if (options.fetchOptions != null) {\n        const opts = options.fetchOptions;\n        if (opts.mode) { request.mode = <RequestMode>(opts.mode); }\n        if (opts.cache) { request.cache = <RequestCache>(opts.cache); }\n        if (opts.credentials) { request.credentials = <RequestCredentials>(opts.credentials); }\n        if (opts.redirect) { request.redirect = <RequestRedirect>(opts.redirect); }\n        if (opts.referrer) { request.referrer = opts.referrer; }\n    }\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    skipFetchSetup?: boolean;\n    fetchOptions?: Record<string, string>;\n    errorPassThrough?: boolean;\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const errorPassThrough = ((typeof(connection) === \"object\") ? !!(connection.errorPassThrough): false);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n\n        if (connection.fetchOptions != null) {\n            options.fetchOptions = shallowCopy(connection.fetchOptions);\n        }\n    }\n\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n            } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"web/5.7.0\";\n","export const version = \"providers/5.6.8\";\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: Formatter.allowNull(address),\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { encode as base64Encode } from \"@ethersproject/base64\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\nconst MAX_CCIP_REDIRECTS = 10;\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    _lastBlockNumber: number\n    _inflight: boolean;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = arrayify(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>) {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return hexConcat(result);\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    _supportsEip2544: null | Promise<boolean>;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    supportsWildcard(): Promise<boolean> {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return false; }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n\n        return this._supportsEip2544;\n    }\n\n    async _fetch(selector: string, parameters?: string): Promise<null | string> {\n\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            ccipReadEnabled: true,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        // Wildcard support; use EIP-2544 to resolve the request\n        let parseBytes = false;\n        if (await this.supportsWildcard()) {\n            parseBytes = true;\n\n            // selector(\"resolve(bytes,bytes)\")\n            tx.data = hexConcat([ \"0x9061b923\", encodeBytes([ dnsEncode(this.name), tx.data ]) ]);\n        }\n\n        try {\n            let result = await this.provider.call(tx);\n            if ((arrayify(result).length % 32) === 4) {\n                logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                    transaction: tx, data: result\n                });\n            }\n            if (parseBytes) { result = _parseBytes(result, 0); }\n            return result;\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        const result = await this._fetch(selector, parameters);\n        if (result != null) { return _parseBytes(result, 0); }\n        return null;\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const result = await this._fetch(\"0x3b3b57de\");\n\n                // No address\n                if (result === \"0x\" || result === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(result);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx), 0);\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // IPNS (CID: 1, Type: libp2p-key)\n        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipns) {\n            const length = parseInt(ipns[3], 16);\n            if (ipns[4].length === length * 2) {\n                return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);\n        if (skynet) {\n            if (skynet[1].length === (34 * 2)) {\n                // URL Safe base64; https://datatracker.ietf.org/doc/html/rfc4648#section-5\n                const urlSafe: Record<string, string> = { \"=\": \"\", \"+\": \"-\", \"/\": \"_\" };\n                const hash = base64Encode(\"0x\" + skynet[1]).replace(/[=+\\/]/g, (a) => (urlSafe[a]));\n                return \"sia:/\\/\" + hash;\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n    _maxFilterBlockRange: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n    disableCcipRead: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.disableCcipRead = false;\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    async ccipReadFetch(tx: Transaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                value.status = response.statusCode;\n                return value;\n            });\n\n            if (result.data) { return result.data; }\n\n            const errorMessage = (result.message || \"unknown error\");\n\n            // 4xx indicates the result is not present; stop\n            if (result.status >= 400 && result.status < 500) {\n                return logger.throwError(`response not found during CCIP fetch: ${ errorMessage }`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n            }\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        return logger.throwError(`error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, Logger.errors.SERVER_ERROR, {\n            urls, errorMessages\n        });\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    // We only allow a single getLogs to be in-flight at a time\n                    if (!event._inflight) {\n                        event._inflight = true;\n\n                        // Filter from the last known event; due to load-balancing\n                        // and some nodes returning updated block numbers before\n                        // indexing events, a logs result with 0 entries cannot be\n                        // trusted and we must retry a range which includes it again\n                        const filter = event.filter;\n                        filter.fromBlock = event._lastBlockNumber + 1;\n                        filter.toBlock = blockNumber;\n\n                        // Prevent fitler ranges from growing too wild\n                        if (filter.toBlock - this._maxFilterBlockRange > filter.fromBlock) {\n                            filter.fromBlock = filter.toBlock - this._maxFilterBlockRange;\n                        }\n\n                        const runner = this.getLogs(filter).then((logs) => {\n                            // Allow the next getLogs\n                            event._inflight = false;\n\n                            if (logs.length === 0) { return; }\n\n                            logs.forEach((log: Log) => {\n                                // Only when we get an event for a given block number\n                                // can we trust the events are indexed\n                                if (log.blockNumber > event._lastBlockNumber) {\n                                    event._lastBlockNumber = log.blockNumber;\n                                }\n\n                                // Make sure we stall requests to fetch blocks and txs\n                                this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n\n                                this.emit(filter, log);\n                            });\n                        }).catch((error: Error) => {\n                            this.emit(\"error\", error);\n\n                            // Allow another getLogs (the range was not updated)\n                            event._inflight = false;\n                        });\n                        runners.push(runner);\n                    }\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async _call(transaction: TransactionRequest, blockTag: BlockTag, attempt: number): Promise<string> {\n        if (attempt >= MAX_CCIP_REDIRECTS) {\n            logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                redirects: attempt, transaction\n            });\n        }\n\n        const txSender = transaction.to;\n\n        const result = await this.perform(\"call\", { transaction, blockTag });\n\n        // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n        if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n            try {\n                const data = hexDataSlice(result, 4);\n\n                // Check the sender of the OffchainLookup matches the transaction\n                const sender = hexDataSlice(data, 0, 32);\n                if (!BigNumber.from(sender).eq(txSender)) {\n                    logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                // Read the URLs from the response\n                const urls: Array<string> = [];\n                const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                const urlsData = hexDataSlice(data, urlsOffset + 32);\n                for (let u = 0; u < urlsLength; u++) {\n                    const url = _parseString(urlsData, u * 32);\n                    if (url == null) {\n                        logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    urls.push(url);\n                }\n\n                // Get the CCIP calldata to forward\n                const calldata = _parseBytes(data, 64);\n\n                // Get the callbackSelector (bytes4)\n                if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                    logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n                const callbackSelector = hexDataSlice(data, 96, 100);\n\n                // Get the extra data to send back to the contract as context\n                const extraData = _parseBytes(data, 128);\n\n                const ccipResult = await this.ccipReadFetch(<Transaction>transaction, calldata, urls);\n                if (ccipResult == null) {\n                    logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                        name: \"OffchainLookup\",\n                        signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                        transaction, data: result\n                    });\n                }\n\n                const tx = {\n                    to: txSender,\n                    data: hexConcat([ callbackSelector, encodeBytes([ ccipResult, extraData ]) ])\n                };\n\n                return this._call(tx, blockTag, attempt + 1);\n\n            } catch (error) {\n                if (error.code === Logger.errors.SERVER_ERROR) { throw error; }\n            }\n        }\n\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params: { transaction, blockTag }, result, error\n            });\n        }\n\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const resolved = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag),\n            ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n        });\n        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0: -1);\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await this._getResolver(currentName, \"getResolver\");\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new Resolver(this, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n\n    }\n\n    async _getResolver(name: string, operation?: string): Promise<string> {\n        if (operation == null) { operation = \"ENS\"; }\n\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation, network: network.name }\n            );\n        }\n\n        try {\n            // keccak256(\"resolver(bytes32)\")\n            const addrData = await this.call({\n                to: network.ensAddress,\n                data: (\"0x0178b8bf\" + namehash(name).substring(2))\n            });\n            return this.formatter.callAddress(addrData);\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32)\n        }\n\n        return null;\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resolver\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddr = await this._getResolver(node, \"lookupAddress\");\n        if (resolverAddr == null) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        const name = _parseString(await this.call({\n            to: resolverAddr,\n            data: (\"0x691f3431\" + namehash(node).substring(2))\n        }), 0);\n\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(node, \"getAvatar\");\n            if (!resolverAddress) { return null; }\n\n            // Try resolving the avatar against the addr.reverse resolver\n            resolver = new Resolver(this, resolverAddress, node);\n            try {\n                const avatar = await resolver.getAvatar();\n                if (avatar) { return avatar.url; }\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n            }\n\n            // Try getting the name and performing forward lookup; allowing wildcards\n            try {\n                // keccak(\"name(bytes32)\")\n                const name = _parseString(await this.call({\n                    to: resolverAddress,\n                    data: (\"0x691f3431\" + namehash(node).substring(2))\n                }), 0);\n                resolver = await this.getResolver(name);\n            } catch (error) {\n                if (error.code !== Logger.errors.CALL_EXCEPTION) { throw error; }\n                return null;\n            }\n\n        } else {\n            // ENS name; forward lookup with wildcard\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.7.0\";\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction spelunk(value: any, requireData: boolean): null | { message: string, data: null | string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(\"reverted\")) {\n        const data = isHexString(value.data) ? value.data: null;\n        if (!requireData || data) {\n            return { message: value.message, data };\n        }\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key], requireData);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value), requireData);\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction checkError(method: string, error: any, params: any): any {\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error, true);\n        if (result) { return result.data; }\n\n        // Nothing descriptive..\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            data: \"0x\", transaction, error\n        });\n    }\n\n    if (method === \"estimateGas\") {\n        // Try to find something, with a preference on SERVER_ERROR body\n        let result = spelunk(error.body, false);\n        if (result == null) { result = spelunk(error, false); }\n\n        // Found \"reverted\", this is a CALL_EXCEPTION\n        if (result) {\n            logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                reason: result.message, method, transaction, error\n            });\n        }\n    }\n\n    // @TODO: Should we spelunk for message too?\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/i)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/i)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n        return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            address.toLowerCase(),\n            JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue(BigNumber.from((<any>transaction)[key]));\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\nexport interface WebSocketLike {\n    onopen: (...args: Array<any>) => any;\n    onmessage: (...args: Array<any>) => any;\n    onerror: (...args: Array<any>) => any;\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string | WebSocketLike, network?: Networkish) {\n\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        if (typeof(url) === \"string\") {\n            super(url, network);\n        } else {\n            super(\"_websocket\", network);\n        }\n\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        } else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this.websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket(): WebSocketLike { return this._websocket; }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this.websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this.websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this.websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this.websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this.websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\nimport { Network } from \"@ethersproject/networks\";\n\nimport { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport type { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"ropsten\":\n            return \"rpc.ankr.com/eth_ropsten/\";\n        case \"rinkeby\":\n            return \"rpc.ankr.com/eth_rinkeby/\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli/\";\n\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\n\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    readonly apiKey: string;\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || result.message != \"OK\") {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", this.network.name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// These are load-balancer-based application IDs\nconst defaultApplicationIds: Record<string, string> = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n\n        if (apiKey == null) {\n            const n = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n\n        }\n\n        super(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"),\n                \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"),\n                \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n\n        } else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"),\n                \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n        } else {\n            url = `https:/\\/${ host }/v1/${ apiKey.applicationId }`\n        }\n\n        const connection: ConnectionInfo = { url };\n\n        // Initialize empty headers\n        connection.headers = {}\n\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1].toLowerCase()) {\n                case \"http\": case \"https\":\n                    return new JsonRpcProvider(network);\n                case \"ws\": case \"wss\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    AnkrProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.7.0\";\n","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.7.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","export const version = \"transactions/5.7.0\";\n"],"names":["BaseX","alphabet","defineReadOnly","this","length","charAt","i","_alphabetMap","value","source","arrayify","digits","carry","j","base","push","string","k","_leader","q","TypeError","bytes","Uint8Array","byte","undefined","Error","reverse","Base58","logger","Logger","ForkEvent","_isForkEvent","Description","Provider","checkAbstract","resolveProperties","block","getBlock","gasPrice","getGasPrice","catch","error","lastBaseFeePerGas","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","BigNumber","mul","add","eventName","listener","on","off","_isProvider","ethDefaultProvider","network","func","providers","options","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","provider","indexOf","name","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","chainId","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","getNetwork","standard","throwArgumentError","defaultProvider","decode","textData","atob","data","charCodeAt","encode","String","fromCharCode","btoa","version","flat","array","depth","result","forEach","flatDeep","arr","call","val","Array","isArray","read_compressed_payload","v","pos","read_payload","u16","symbol_count","total","acc","skip","pos_payload","read_width","read_buffer","read_bit","FULL","Math","HALF","QRTR","MASK","register","symbols","low","range","floor","start","end","mid","a","b","offset","map","x","decode_arithmetic","signed","read_ascending","n","next","read_deltas","read_member_array","lookup","vX","vN","read_counts","read_transposed","w","m","fill","read_linear_table","dx","dy","read_zero_terminated_array","ys","slice","_","j_dy","y","read_replacement_table","r","VALID","Set","IGNORED","MAPPED","ret","fromEntries","read_mapped_map","EMOJI_ROOT","sorted","sort","read","branches","keys","set","node","size","temp","valid","fe0f","save","check","read_emoji_trie","explode_cp","toUtf8CodePoints","filter_fe0f","cps","filter","cp","ens_normalize_post_check","split","label","lastIndexOf","every","err","message","ens_normalize","emoji_filter","input","output","emoji","consume_emoji_reversed","pop","has","toString","toUpperCase","s","fromCodePoint","normalize","eaten","saved","stack","find","splice","Zeros","checkComponent","comp","ensNameSplit","toUtf8Bytes","comps","last","namehash","keccak256","concat","hexlify","getUrl","href","request","method","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetchOptions","opts","fetch","response","arrayBuffer","key","toLowerCase","get","statusCode","status","statusMessage","statusText","staller","duration","Promise","resolve","setTimeout","bodyify","type","isBytesLike","trim","toUtf8String","fetchJson","connection","json","processFunc","updated","shallowCopy","Object","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","errorPassThrough","allow304","timeout","allowGzip","user","password","substring","allowInsecureAuthentication","throwError","argument","authorization","base64Encode","reData","RegExp","dataMatch","match","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","reject","makeError","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","parseInt","random","pow","serverError","throttleRetry","race","_fetchData","JSON","parse","poll","ceiling","interval","done","retryLimit","then","oncePoll","once","onceBlock","Formatter","formats","getDefaultFormats","address","bind","bigNumber","blockTag","hash","hex","number","transaction","accessList","allowNull","blockHash","blockNumber","transactionIndex","confirmations","from","gasLimit","to","nonce","uint256","creates","raw","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","root","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","parentHash","timestamp","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","boolean","allowFalsish","accessListify","toNumber","strict","isHexString","getAddress","hexDataSlice","getContractAddress","hexValue","hexDataLength","hexZeroPad","format","author","_difficulty","_block","gas","isZero","networkId","replace","parseTransaction","byzantium","object","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","console","log","checkTopic","topic","serializeTopics","unique","join","getEventTag","isForkEvent","warn","getTime","Date","PollableEvents","Event","tag","_lastBlockNumber","_inflight","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","toHexString","base58Encode","sha256","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","ceil","encodeBytes","datas","byteCount","hexConcat","Resolver","resolvedAddress","formatter","_supportsEip2544","eq","code","selector","parameters","tx","ccipReadEnabled","parseBytes","supportsWildcard","_fetch","coinType","hexBytes","coinInfo","operation","words","bech32","unshift","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","_resolvedAddress","owner","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","stringify","imageUrl","image","ipfs","ipns","swarm","skynet","urlSafe","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","getStatic","emit","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","event","calldata","urls","sender","errorMessages","errorMessage","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","getLogs","all","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","now","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","removeListener","lastBlockNumber","startBlock","scannedBlock","replaceHandler","__awaiter","getTransactionCount","getTransaction","mined","getBlockWithTransactions","ti","waitForTransaction","reason","cancelled","replacement","_wrapTransaction","unref","addressOrName","_getBlockTag","params","position","p","expectedHash","returnedHash","wait","confirms","signedTransaction","t","hexTx","values","redirects","txSender","signature","urlsOffset","urlsLength","urlsData","u","callbackSelector","ccipReadFetch","ccipResult","_call","_getTransactionRequest","resolved","resolveName","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","currentName","_getResolver","resolver","addrData","getResolver","resolverAddr","nameOrAddress","resolverAddress","getAvatar","e","pollable","_startEvent","_addEventListener","args","stopped","eventTag","apply","_stopEvent","removeAllListeners","found","allowedTransactionKeys","forwardErrors","Signer","_checkProvider","getBalance","checkTransaction","estimateGas","populateTransaction","signTransaction","signedTx","sendTransaction","getFeeData","hasEip1559","feeData","getChainId","results","_isSigner","padding","NegativeOne","Zero","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","width","boundsUpper","mask","boundsLower","lt","gt","toTwos","padOffset","hexPadRight","id","encodeType","fields","TypedDataEncoder","types","freeze","deepCopy","links","parents","subtypes","uniqueNames","field","baseType","primaryTypes","checkCircular","child","subtype","primaryType","st","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","callback","_visit","reduce","accum","domain","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","errorGas","spelunk","requireData","checkError","responseText","getResult","payload","getLowerCase","_constructorGuard","JsonRpcSigner","constructorGuard","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","constructor","hexlifyTransaction","sendUncheckedTransaction","_TypedDataEncoder","populated","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","listenerCount","allowExtra","allowed","checkProperties","WS","WebSocket","NextId","WebSocketProvider","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","sub","_subs","subscription","fauxPoll","_websocket","_detectNetwork","rid","param","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","onerror","close","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","arguments","getHost","projectSecret","getTransactionPostData","maxFeePerGs","storageKeys","getJsonResult","checkLogTag","getBaseUrl","module","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","parseFloat","ethusd","endBlock","startblock","endblock","item","timeStamp","shuffled","tmp","checkNetworks","median","maxDelta","middle","serialize","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","defineProperty","getProcessFunc","configs","c","_highestBlockNumber","tally","count","normalizedTally","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","index","isProvider","stallTimeout","priority","first","t0","inflightWeight","backend","waiting","errors","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","Web3Provider","path","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","ripemd160","update","digest","computeHmac","algorithm","SupportedAlgorithm","assert","msg","equal","l","utils","exports","zero2","word","toHex","res","toArray","enc","hi","lo","minAssert","minUtils","getNAF","num","bits","naf","max","bitLength","ws","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","prototype","intFromLE","BN","BaseCurve","conf","red","prime","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","cmp","toJ","redNeg","ja","jb","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","dbl","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","x1","y1","x2","y2","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","d","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","defineCurve","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","_init","seed","_update","_hmac","kmac","reseed","addEnc","generate","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","umod","derive","sign","verify","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","_curve","getCurve","SigningKey","privateKey","other","p0","publicKey","digestBytes","splitSignature","otherKey","otherKeyPair","computePublicKey","_isSigningKey","recoverPublicKey","sig","rs","compressed","signingKey","TransactionTypes","handleAddress","handleNumber","computeAddress","recoverAddress","formatNumber","stripZeros","accessSetify","storageKey","localeCompare","formatAccessList","_serializeEip1559","RLP","_serializeEip2930","_parseEipSignature","recid","rawTransaction","_parse","_parseEip2930","_parseEip1559","transactionType"],"sourceRoot":""}