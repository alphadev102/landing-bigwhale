{"version":3,"file":"static/js/4607.28dc0799.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/account.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/layout.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/loader.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/errors.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/connection.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@web3auth/solana-provider/node_modules/@solana/web3.js/src/index.ts","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../node_modules/@web3auth/solana-provider/node_modules/buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/node_modules/eventemitter3/index.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@web3auth/solana-provider/node_modules/@babel/runtime/regenerator/index.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/regenerator/index.js","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as HttpAgent} from 'http';\nimport {Agent as HttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: HttpAgent | HttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager:\n    | {requestEnd(): void; requestStart(): HttpAgent | HttpsAgent}\n    | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        agentManager = new AgentManager(\n          url.startsWith('https:') /* useHttps */,\n        );\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof HttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof HttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agentManager = {requestEnd() {}, requestStart: () => httpAgent};\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: HttpAgent | HttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | DurableNonceTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | DurableNonceTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as\n        | BlockheightBasedTransactionConfirmationStrategy\n        | DurableNonceTransactionConfirmationStrategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, Buffer.from(signature));\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _255n = BigInt(255);\nconst CURVE_ORDER = _2n ** BigInt(252) + BigInt('27742317777372353535851937790883648493');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: _2n ** _255n - BigInt(19),\n    l: CURVE_ORDER,\n    n: CURVE_ORDER,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst MAX_256B = _2n ** BigInt(256);\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(_2n * mod(Z1 ** _2n));\n        const D = mod(a * A);\n        const E = mod(mod((X1 + Y1) ** _2n) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2 ** _2n));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= MAX_256B)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & (_2n ** _255n - _1n));\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, MAX_256B))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        x_3 = mod((DA + CB) ** _2n);\n        z_3 = mod(x_1 * (DA - CB) ** _2n);\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction finalizeSchnorrChallenge(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nfunction initSchnorrSigArgs(message, privateKey, auxRand) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const px = P.toRawX();\n    const d = hasEvenY(P) ? d0 : CURVE.n - d0;\n    return { m, P, px, d, rand };\n}\nfunction initSchnorrNonce(d, t0h) {\n    return numTo32b(d ^ bytesToNumber(t0h));\n}\nfunction finalizeSchnorrNonce(k0h) {\n    const k0 = mod(bytesToNumber(k0h), CURVE.n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const rx = R.toRawX();\n    const k = hasEvenY(R) ? k0 : CURVE.n - k0;\n    return { R, rx, k };\n}\nfunction finalizeSchnorrSig(R, k, e, d) {\n    return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, await utils.taggedHash(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(await utils.taggedHash(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = await schnorrVerify(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction schnorrSignSync(message, privateKey, auxRand = utils.randomBytes()) {\n    const { m, px, d, rand } = initSchnorrSigArgs(message, privateKey, auxRand);\n    const t = initSchnorrNonce(d, utils.taggedHashSync(TAGS.aux, rand));\n    const { R, rx, k } = finalizeSchnorrNonce(utils.taggedHashSync(TAGS.nonce, t, px, m));\n    const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, rx, px, m));\n    const sig = finalizeSchnorrSig(R, k, e, d);\n    const isValid = schnorrVerifySync(sig, m, px);\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = finalizeSchnorrChallenge(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    privateAdd: (privateKey, tweak) => {\n        const p = normalizePrivateKey(privateKey);\n        const t = normalizePrivateKey(tweak);\n        return numTo32b(mod(p + t, CURVE.n));\n    },\n    privateNegate: (privateKey) => {\n        const p = normalizePrivateKey(privateKey);\n        return numTo32b(CURVE.n - p);\n    },\n    pointAddScalar: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = normalizePrivateKey(tweak);\n        const Q = Point.BASE.multiplyAndAddUnsafe(P, t, _1n);\n        if (!Q)\n            throw new Error('Tweaked point at infinity');\n        return Q.toRawBytes(isCompressed);\n    },\n    pointMultiply: (p, tweak, isCompressed) => {\n        const P = Point.fromHex(p);\n        const t = bytesToNumber(ensureBytes(tweak));\n        return P.multiply(t).toRawBytes(isCompressed);\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof utils.sha256Sync !== 'function')\n            throw new Error('utils.sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = utils.sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","span","property","Number","isInteger","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","ExternalLayout","Error","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","layout","UInt","UIntBE","decode","encode","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","makeDestinationObject","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","_setPrototypeOf","o","p","setPrototypeOf","__proto__","subClass","superClass","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","ReferenceError","_getPrototypeOf","getPrototypeOf","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","this","args","arguments","apply","err","_defineProperty","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","BigInt","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","t","j","u64","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","h","l","s","rotlL","Keccak","blockLen","suffix","outputLen","enableXOF","rounds","pos","posOut","finished","destroyed","assert","state","state32","u32","B","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","fill","keccakP","data","len","toBytes","take","min","keccak","out","finish","bufferOut","set","subarray","writeInto","bytes","xofInto","destroy","digestInto","to","Hash","wrapConstructor","keccak_256","genShake","wrapConstructorWithOpts","opts","dkLen","ed25519","sha512","concatBytes","generateKeypair","privateScalar","publicKey","getPublicKey","secretKey","isOnCurve","sign","message","verify","toBuffer","arr","Buffer","byteLength","Struct","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Map","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","equals","eq","toBase58","toJSON","toArrayLike","zeroPad","fromPublicKey","seed","programId","publicKeyBytes","sha256","seeds","forEach","createProgramAddressSync","address","nonce","seedsWithNonce","concat","findProgramAddressSync","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","signature","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","get","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","map","instruction","programIdIndex","accountKeyIndexes","keys","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","str","chars","alloc","getAlloc","type","getItemAlloc","item","field","decodeLength","size","elem","encodeLength","rem_len","condition","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","entries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","delete","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","compile","payerKey","byteArray","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","prefix","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","add","items","compileMessage","JSON","stringify","console","warn","accountMetas","includes","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","every","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","Set","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","options","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","status","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","freeze","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","base","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","array","transactions","bytesLength","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","val","isArrayProp","max","propVal","toStr","isFinite","returnVal","trailingZeros","n","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","code","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","coerce","string","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedConfig","createRpcResult","result","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","context","number","notificationResultAndContext","versionedMessageFromResponse","version","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","process","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","httpAgent","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","rest","protocol","startsWith","startPort","parseInt","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","init","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","res","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","aborted","reason","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","expiryPromise","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","race","outcome","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","_signatureStatus","commitmentForStatus","timeoutMs","timeoutId","TIMED_OUT","clearTimeout","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","transactionDetails","c","extra","block","endSlot","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","join","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","hash","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","_this$_subscriptionSt","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","fromSecretKey","createInstructionWithPublicKey","secp256k1","hmac","msgs","msg","update","digest","publicKeyCreate","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","msgHash","privKey","pkey","messageHash","der","recovered","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","createChainIdMiddleware","chainId","req","next","end","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","_context","createRequestAccountsMiddleware","_ref3","requestAccounts","_context2","createGenericJRPCMiddleware","targetMethod","handler","_context3","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_inherits","_classCallCheck","_super","chainConfig","chainNamespace","CHAIN_NAMESPACES","_createClass","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_context5","_context6","display","sigData","_req$params","_req$params2","_context7","_context8","txRes","createInjectedProviderProxyMiddleware","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","_yield$injectedProvid4","conn","allTxns","unsignedTx","_yield$injectedProvid5","_data$signatures","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_context4","_this","configure","_objectSpread","setupProvider","_getProviderHandlers","keyPairGenerator","_context9","keyPair","signedMsg","nacl","_providerEngineProxy","sig","txns","_req$params6","_iterator","tx","SolanaPrivateKeyProvider","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","_this2","updateAccount","_ref7","createAccountMiddleware","providerFactory","SolanaWallet","_yield$this$provider$","signedTransaction","signedTransactions","base64","require","ieee754","customInspectSymbol","K_MAX_LENGTH","createBuffer","buf","encodingOrOffset","allocUnsafe","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","hi","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","allocUnsafeSlow","_isBuffer","compare","a","list","swap16","swap32","swap64","toLocaleString","inspect","replace","trim","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","errors","E","sym","getMessage","Base","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","received","abs","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","BufferBigIntNotDefined","_Buffer","module","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","reverse","hex","num","width","padStart","__createBinding","k","k2","__setModuleDefault","__decorate","decorators","desc","d","r","getOwnPropertyDescriptor","Reflect","decorate","__importStar","mod","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","toArray","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","parse","isError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","send","promise","_login","mark","_callee","resp","wrap","prev","sent","abrupt","stop","_x","_listMethods","_callee2","_this3","_subscribe","_callee3","event","_x2","_unsubscribe","_callee4","_x3","_this4","listeners","_ref2","EventEmitter","WebSocketBrowserImpl","protocols","window","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","Events","EE","once","addListener","emitter","evt","_events","_eventsCount","clearEvent","eventNames","events","names","handlers","ee","listenerCount","a1","a2","a3","a4","a5","removeListener","removeAllListeners","off","prefixed","getRandomValues","rnds8","rng","crypto","msCrypto","REGEX","byteToHex","validate","rnds","random","superPropBase","_get","receiver","object","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","isGeneratorFunction","genFun","ctor","awrap","async","iter","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","Function","assertThisInitialized","_255n","CURVE_ORDER","CURVE","P","Gx","Gy","MAX_256B","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","z","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","X2Z1","Y1Z2","Y2Z1","A","C","D","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","affinePoint","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","tmp","inverted","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_y","numberTo32BytesLE","bytesToHex","toRawBytes","toHex","one","two","subtract","multiply","r0","Ns","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","getExtendedPublicKey","point","Signature","assertValidity","u8","fromHex","arrays","pad","_sha512Sync","hexes","uint8a","hexToBytes","hexByte","byte","numberTo32BytesBE","modulo","q","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","isSafeInteger","adjustBytes25519","checkPrivateKey","getKeyFromHash","hashed","head","pointBytes","sha512s","utils","getExtendedPublicKeySync","prepareVerification","SB","pub","finishVerification","kA","sync","_setWindowSize","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","lengths","bool","exists","checkFinished","output","SHA2","padOffset","isLE","view","createView","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","HMAC","_key","iHash","oHash","_cloneInto","Maj","SHA256_K","IV","SHA256_W","SHA256","getUint32","W15","s0","rotr","s1","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","DataView","TextEncoder","hashConstructor","hashC","hashCons","_3n","_8n","POW_2_256","beta","weistrass","x2","x3","USE_ENDOMORPHISM","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","isUint8a","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","divNearest","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","hmacSha256Sync","hmacSync","incr","kmdToSig","kBytes","fromCompact","fromPrivateKey","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","normalizeS","toCompactRawBytes","signSync","drbg","reseedSync","generateSync","TAGGED_HASH_PREFIXES","isValidPrivateKey","privateAdd","tweak","privateNegate","pointAddScalar","pointMultiply","hashToPrivateKey","messages","importKey","ckey","createHmac","sha256Sync","taggedHash","tagP","tagH","taggedHashSync","toFailures","StructError","failure","failures","path","isObject","print","shiftIterator","toFailure","struct","branch","refinement","run","ctx","coercer","valid","validator","ts","refiner","is","tuples","Element","Class","constant","description","never","Key","Value","Elements","Never","Structs","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}